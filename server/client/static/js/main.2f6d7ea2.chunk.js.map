{"version":3,"sources":["utils/generateAuthErrors.js","utils/history.js","app/services/localStorage.service.js","app/services/auth.service.js","app/services/http.service.js","app/services/user.service.js","app/store/users.js","app/components/header_and_footer/images/default-user.png","app/components/header_and_footer/profile_dropdown.jsx","app/store/favourite.js","app/store/basket.js","app/components/header_and_footer/header.jsx","utils/resizePage.js","utils/validator.js","app/components/auth_and_registration/inputs.jsx","app/components/auth_and_registration/authorization.jsx","utils/displayDate.js","app/components/auth_and_registration/registration.jsx","app/components/header_and_footer/footer.jsx","app/components/backLinkComponent/backLink.jsx","app/components/basketPage/basketItem.jsx","app/components/basketPage/basket.jsx","app/components/comments/addCommentForm.jsx","app/components/comments/comment.jsx","app/services/comment.service.js","app/store/comments.js","app/components/comments/comments.jsx","app/constants/constants.js","utils/isOutDated.js","app/services/products.service.js","app/store/products.js","utils/errorCatcher.js","app/components/products/productPage/product.jsx","app/components/products/productsPage/category/category.jsx","app/components/products/productsPage/sort/sort.jsx","app/components/search/search.jsx","app/components/products/productsPage/productsItem.jsx","app/components/pagination/pagination.jsx","app/components/products/productsPage/productsList.jsx","utils/paginate.js","app/components/products/products.jsx","app/components/404/page-404.jsx","app/components/favoritesPage/favoritesPage.jsx","app/mockData/mockData.jsx","app/components/initialize/initialize.jsx","app/components/protectedRoutes/protectedRoute.jsx","app/components/global_loading/global_loading.jsx","app/components/hoc/usersLoader.jsx","app/components/header_and_footer/profileEdit.jsx","app/components/header_and_footer/profileUser.jsx","app/components/header_and_footer/profile.jsx","app/components/auth_and_registration/sign_out.jsx","app/components/hoc/appLoader.jsx","app/App.js","app/store/createStore.js","index.js"],"names":["generateAuthErrors","message","history","createBrowserHistory","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","localStorageService","setTokens","refreshToken","accessToken","userId","expiresIn","expiresDate","Date","getTime","localStorage","setItem","getAccessToken","getItem","getRefreshToken","getTokenExpiresDate","getUserId","removeAuthData","removeItem","httpAuth","axios","create","baseURL","config","apiEndpoint","params","key","process","REACT_APP_FIREBASE_KEY","authService","register","payload","a","post","data","login","email","password","returnSecureToken","grant_type","refresh_token","http","configFile","interceptors","request","use","isExpired","now","isFireBase","containSlash","test","url","slice","idToken","id_token","expires_in","localId","user_id","auth","headers","Authorization","error","Promise","reject","response","res","content","_id","Object","keys","map","status","console","log","httpService","get","put","delete","patch","userEndpoint","userService","getCurrentUser","getParamsUser","id","update","initialState","entities","isLoading","paramsUserData","isLoggedIn","dataLoaded","usersSlice","createSlice","name","reducers","usersRequested","state","usersReceived","action","usersReceivedFailed","usersRequestedSuccess","usersRequestedFailed","usersUpdated","findIndex","u","userSignOut","authRequested","usersReducer","reducer","actions","createAction","userUpdateRequested","loadUsersList","dispatch","getUserById","users","find","updateCurrentUserData","contentInner","ProfileDropdown","userById","useSelector","toggleDropdown","document","querySelector","classList","toggle","className","onClick","src","img","userDefaultImage","alt","to","favouritesSlice","entitiesAmount","favouritesReceived","favouritesReceivedLength","favouritesReducer","favouritesRequested","getFavouritesById","productId","favourites","toggleFavourite","product","getState","indexOfFindedProduct","currentUserId","getCurrentUserId","currentUserFavourites","JSON","parse","length","p","newFavouriteProductsArray","filter","stringify","push","basketSlice","totalSumOfOrder","basketReceived","basketReceivedLength","basketReceivedLengthLess","basketClean","basketDeleteProductById","basketChangeTotalSum","basketReducer","basketRequested","changeProductsToBasketList","amount","minus","currentUserBasket","value","splice","result","forEach","elem","changeTotalSumOfOrder","arr","totalSum","element","price","Header","foundFavoriteProductsAmount","foundBasketProductsAmount","basket","useState","documentElement","clientWidth","clientHeight","size","setSize","handleResize","useEffect","window","addEventListener","removeEventListener","resizePage","width","headerBurger","headerMenu","body","toggleBurger","remove","validator","errors","validate","validateMethod","statusValidate","trim","fieldName","Inputs","type","onChange","classNameInput","messagePlaceholder","showPassword","setShowPassword","placeholder","prevState","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","defaultProps","useHistory","rememberMe","setData","useDispatch","setErrors","signInError","handleChange","target","validatorConfig","isRequired","isValidValue","onSubmit","event","preventDefault","redirect","location","from","code","errorMessage","signIn","htmlFor","checked","displayDate","date","dateNow","getFullYear","getDay","getHours","minutesDif","getMinutes","getDate","getMonth","Registration","lastName","registerDate","amountReviews","minValue","isEmail","isCapitalSymbol","isContainDigit","nowDate","regDate","parseInt","newData","Footer","currentYear","BackLink","profileId","useParams","routeLinkBack","BasketItem","imgSrc","taste","newCurrentUserBasket","deleteBasketProductById","y","rx","transform","Basket","baksetProducts","isModal","setModal","openFinalModalWindow","AddCommentForm","clearForm","e","Comment","created","created_at","onRemove","user","toUpperCase","toUpperFirstLetter","lastname","sliceLastame","commentEndpoint","commentService","createComment","getComments","orderBy","equalTo","fetchAll","removeComment","commentId","commentsSlice","commentsRequested","commentsReceived","commentsReceivedError","commentCreated","commentRemoved","c","commentsReducer","addCommentRequested","removeCommentRequested","checkCommentRequested","checkCommentsAmount","amountComments","Comments","comments","loadCommentsList","handleRemoveComment","sortedComments","comment","constants","categories","sort","rating","reviews","messages","addToBasket","addToFavourite","isOutDated","productsService","req","productsSlice","lastFetch","productsRequested","productsReceived","productsReceivedError","productsReducer","errorCatcher","errorElement","createElement","textContent","append","setTimeout","ProductPage","products","productError","foundProduct","setFoundProduct","productCount","setProductCount","isFavourite","Category","clearCategory","changeCategoryItems","selectedCategoryItem","categoryText","setCategoryText","categoryParent","overlay","changeClasses","item","Sort","onSort","currentSort","allTar","querySelectorAll","tar","contains","add","iter","order","handleSort","Search","searchValue","changeValueSearch","ProductsItem","reviewWord","colorOfStar","Number","Pagination","allAmountProducts","sizeOnePage","pageChange","currentPage","pageNumbers","Math","ceil","pages","_","range","page","ProductsPage","sortBy","setSortBy","setCurrentPage","setSelectedCategoryItem","setSearchValue","searchValueFoundProducts","setSearchValueFoundProducts","filteredProductsCategory","toLowerCase","replace","includes","category","downloadProducts","sortedProducts","cropProducts","items","pageNumber","pageSize","startIndex","take","paginate","Products","PageNotFound","FavoritesPage","favoriteProducts","foundFavoriteProducts","mockData","statusConsts","setError","setStatus","progress","setProgress","count","setCount","summuryCount","incrementCount","prod","newProgress","floor","updateProgress","initialize","Initialize","ProtectedRoute","Component","component","children","rest","render","props","pathname","GlobalLoading","UsersLoader","ProfileEdit","currentUser","goBack","ProfileUser","paramsId","paramsUser","pageUser","setPageUser","Profile","edit","SignOut","AppLoader","userIsLoading","favouritesProducts","basketProducts","App","path","exact","ProductsList","require","combineReducers","configureStore","customizedMiddleware","getDefaultMiddleware","serializableCheck","rootReducer","store","middleware","ReactDOM","StrictMode","getElementById"],"mappings":"80HAAO,SAASA,EAAmBC,GAC/B,OAAQA,GACJ,IAAK,mBAEL,IAAK,kBACD,MAAO,8KACX,IAAK,eACD,MAAO,uMACX,QACI,MAAO,gQ,YCLJC,EAFCC,iC,iBCFVC,EAAY,YACZC,EAAc,oBACdC,EAAc,cACdC,EAAa,gBAkCnB,IAQeC,EARa,CACxBC,UAjCG,YAKH,IAJAC,EAID,EAJCA,aACAC,EAGD,EAHCA,YACAC,EAED,EAFCA,OAED,IADCC,iBACD,MADa,KACb,EACOC,GAAc,IAAIC,MAAOC,UAAwB,IAAZH,EAC3CI,aAAaC,QAAQX,EAAYK,GACjCK,aAAaC,QAAQd,EAAWO,GAChCM,aAAaC,QAAQb,EAAaK,GAClCO,aAAaC,QAAQZ,EAAaQ,IAwBlCK,eAtBG,WACH,OAAOF,aAAaG,QAAQhB,IAsB5BiB,gBApBG,WACH,OAAOJ,aAAaG,QAAQf,IAoB5BiB,oBAXG,WACH,OAAOL,aAAaG,QAAQd,IAW5BiB,UATG,WACH,OAAON,aAAaG,QAAQb,IAS5BiB,eApBG,WACHP,aAAaQ,WAAWlB,GACxBU,aAAaQ,WAAWrB,GACxBa,aAAaQ,WAAWpB,GACxBY,aAAaQ,WAAWnB,K,QCvBtBoB,EAAWC,IAAMC,OAAO,CAC1BC,QAASC,EAAOC,YAAc,QAC9BC,OAAQ,CACJC,IAAKC,mIAAYC,0BAInBC,EAAc,CAChBC,SAAS,WAAD,4BAAE,WAAOC,GAAP,iBAAAC,EAAA,sEACiBb,EAASc,KAAT,SAAwBF,GADzC,uBACEG,EADF,EACEA,KADF,kBAECA,GAFD,2CAAF,mDAAC,GAITC,MAAM,WAAD,4BAAE,mCAAAH,EAAA,6DAASI,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,SACoBlB,EAASc,KAAT,qBAAoC,CACvDG,QACAC,WACAC,mBAAmB,IAJpB,uBACKJ,EADL,EACKA,KADL,kBAMIA,GANJ,2CAAF,mDAAC,GAQN/B,aAAa,WAAD,4BAAE,8BAAA6B,EAAA,sEACab,EAASc,KAAK,QAAS,CAC1CM,WAAY,gBACZC,cAAevC,EAAoBa,oBAH7B,uBACFoB,EADE,EACFA,KADE,kBAKHA,GALG,2CAAF,kDAAC,IASFL,I,OC5BTY,EAAOrB,IAAMC,OAAO,CACtBC,QAASoB,EAAWlB,cAGxBiB,EAAKE,aAAaC,QAAQC,IAA1B,uCACI,WAAgBtB,GAAhB,6BAAAS,EAAA,yDACUzB,EAAcN,EAAoBc,sBAClCZ,EAAeF,EAAoBa,kBACnCgC,EAAY3C,GAAgBI,EAAcC,KAAKuC,OACjDL,EAAWM,WAJnB,oBAKcC,EAAe,QAAQC,KAAK3B,EAAO4B,KACzC5B,EAAO4B,KACFF,EAAe1B,EAAO4B,IAAIC,MAAM,GAAI,GAAK7B,EAAO4B,KAAO,SACxDL,EARZ,iCAS+BjB,EAAY1B,eAT3C,OASkB+B,EATlB,OAUYjC,EAAoBC,UAAU,CAC1BC,aAAc+B,EAAKM,cACnBa,QAASnB,EAAKoB,SACdhD,UAAW4B,EAAKqB,WAChBC,QAAStB,EAAKuB,UAd9B,SAiBcrD,EAAcH,EAAoBW,oBAEpCW,EAAOE,OAAP,2BAAqBF,EAAOE,QAA5B,IAAoCiC,KAAMtD,KAnBtD,4BAsBY0C,EAtBZ,kCAuB+BjB,EAAY1B,eAvB3C,QAuBkB+B,EAvBlB,OAwBYjC,EAAoBC,UAAUgC,GAxB1C,SA0Bc9B,EAAcH,EAAoBW,oBAEpCW,EAAOoC,QAAP,2BACOpC,EAAOoC,SADd,IAEIC,cAAc,UAAD,OAAYxD,MA9BzC,iCAkCWmB,GAlCX,4CADJ,uDAqCI,SAAUsC,GACN,OAAOC,QAAQC,OAAOF,MAU9BpB,EAAKE,aAAaqB,SAASnB,KACvB,SAACoB,GARL,IAAsB/B,EAcd,OALIQ,EAAWM,WACXiB,EAAI/B,KAAO,CAAEgC,SAVHhC,EAUyB+B,EAAI/B,KATxCA,IAASA,EAAKiC,IACfC,OAAOC,KAAKnC,GAAMoC,KAAI,SAAC5C,GAAD,sBACfQ,EAAKR,OAEZQ,IAOE+B,EAAI/B,KAAO,CAAEgC,QAASD,EAAI/B,MAEvB+B,KAEX,SAAUJ,GASN,OAPIA,EAAMG,UACNH,EAAMG,SAASO,QAAU,KACzBV,EAAMG,SAASO,OAAS,KAGxBC,QAAQC,IAAI,oCAETX,QAAQC,OAAOF,MAG9B,IAOea,EAPK,CAChBC,IAAKlC,EAAKkC,IACV1C,KAAMQ,EAAKR,KACX2C,IAAKnC,EAAKmC,IACVC,OAAQpC,EAAKoC,OACbC,MAAOrC,EAAKqC,OChFVC,EAAe,SAEfC,EAAc,CAChBL,IAAI,WAAD,4BAAE,8BAAA3C,EAAA,sEACsB0C,EAAYC,IAAII,GADtC,uBACO7C,EADP,EACOA,KADP,kBAEMA,GAFN,2CAAF,kDAAC,GAIJb,OAAO,WAAD,4BAAE,WAAOU,GAAP,iBAAAC,EAAA,sEACmB0C,EAAYE,IAC/BG,EAAehD,EAAQoC,IACvBpC,GAHA,uBACIG,EADJ,EACIA,KADJ,kBAKGA,GALH,2CAAF,mDAAC,GAOP+C,eAAe,WAAD,4BAAE,8BAAAjD,EAAA,sEACW0C,EAAYC,IAC/BI,EAAe9E,EAAoBe,aAF3B,uBACJkB,EADI,EACJA,KADI,kBAILA,GAJK,2CAAF,kDAAC,GAMfgD,cAAc,WAAD,4BAAE,WAAOC,GAAP,iBAAAnD,EAAA,sEACY0C,EAAYC,IAAII,EAAeI,GAD3C,uBACHjD,EADG,EACHA,KADG,kBAEJA,GAFI,2CAAF,mDAAC,GAIdkD,OAAO,WAAD,4BAAE,WAAOrD,GAAP,iBAAAC,EAAA,sEACmB0C,EAAYI,MAC/BC,EAAe9E,EAAoBe,YACnCe,GAHA,uBACIG,EADJ,EACIA,KADJ,kBAKGA,GALH,2CAAF,mDAAC,IAQI8C,IC5BTK,EAAepF,EAAoBW,iBACnC,CACI0E,SAAU,KACVC,WAAW,EACX1B,MAAO,KACPH,KAAM,CAAErD,OAAQJ,EAAoBe,aACpCwE,eAAgB,KAChBC,YAAY,EACZC,YAAY,GAEhB,CACIJ,SAAU,KACVC,WAAW,EACX1B,MAAO,KACPH,KAAM,KACN8B,eAAgB,KAChBC,YAAY,EACZC,YAAY,GAGhBC,EAAaC,sBAAY,CAC3BC,KAAM,QACNR,eACAS,SAAU,CACNC,eAAgB,SAACC,GACbA,EAAMT,WAAY,GAEtBU,cAAe,SAACD,EAAOE,GACnBF,EAAMV,SAAWY,EAAOnE,QACxBiE,EAAMT,WAAY,EAClBS,EAAMN,YAAa,GAEvBS,oBAAqB,SAACH,EAAOE,GACzBF,EAAMnC,MAAQqC,EAAOnE,QACrBiE,EAAMT,WAAY,GAEtBa,sBAAuB,SAACJ,EAAOE,GAC3BF,EAAMtC,KAAOwC,EAAOnE,QACpBiE,EAAMP,YAAa,GAEvBY,qBAAsB,SAACL,EAAOE,GAC1BF,EAAMnC,MAAQqC,EAAOnE,SAEzBuE,aAAc,SAACN,EAAOE,GAClB,IAAMjC,EAAM+B,EAAMV,SAASiB,WAAU,SAACC,GAClC,OAAOA,EAAErC,MAAQ+B,EAAOnE,QAAQoC,OAEpC6B,EAAMV,SAASrB,GAAOiC,EAAOnE,SAEjC0E,YAAa,SAACT,GACVA,EAAMtC,KAAO,KACbsC,EAAMP,YAAa,EACnBO,EAAMN,YAAa,GAEvBgB,cAAe,SAACV,GACZA,EAAMnC,MAAQ,SAKT8C,EAA0BhB,EAAnCiB,QAAuBC,EAAYlB,EAAZkB,QAE3Bd,EAOAc,EAPAd,eACAE,EAMAY,EANAZ,cACAE,EAKAU,EALAV,oBACAC,EAIAS,EAJAT,sBACAC,EAGAQ,EAHAR,qBACAC,EAEAO,EAFAP,aACAG,EACAI,EADAJ,YAGEC,EAAgBI,uBAAa,uBAC7BC,EAAsBD,uBAAa,6BAyC5BE,EAAgB,yDAAM,WAAOC,GAAP,iBAAAjF,EAAA,6DAC/BiF,EAASlB,KADsB,kBAGDf,EAAYL,MAHX,gBAGnBT,EAHmB,EAGnBA,QACR+C,EAAShB,EAAc/B,IAJI,gDAM3B+C,EAASd,EAAoB,EAAD,KAND,yDAAN,uDAYhBe,EAAc,SAAC7G,GAAD,OAAY,SAAC2F,GACpC,GAAIA,EAAMmB,MAAM7B,SACZ,OAAOU,EAAMmB,MAAM7B,SAAS8B,MAAK,SAACZ,GAAD,OAAOA,EAAErC,MAAQ9D,OAU7CgH,EAAwB,SAACtF,GAAD,8CAAa,WAAOkF,GAAP,eAAAjF,EAAA,6DAC9CiF,EAASF,KADqC,kBAGf/B,EAAYI,OAAOrD,GAHJ,OAGpCuF,EAHoC,OAI1CL,EAASX,EAAagB,EAAapD,UAJO,gDAM1C+C,EAASZ,KANiC,yDAAb,uDAmCtBM,ICnLA,MAA0B,yC,OC6C1BY,EAtCS,SAAC,GAAgB,IAAdlH,EAAa,EAAbA,OACjBmH,EAAWC,YAAYP,EAAY7G,IACnCqH,EAAiB,WACEC,SAASC,cAAc,mBAC/BC,UAAUC,OAAO,0BAGlC,OACI,mCACKN,GACG,sBAAKO,UAAU,WAAf,UACI,qBAAIA,UAAU,kBAAkBC,QAASN,EAAzC,UACI,qBACIO,IAAKT,EAASU,IAAMV,EAASU,IAAMC,EACnCC,IAAI,SAER,+BAAOZ,EAAWA,EAAS3B,KAAO,gDAEtC,sBAAKkC,UAAU,iBAAiBC,QAASN,EAAzC,UACI,cAAC,IAAD,CACIW,GAAE,mBAAchI,GAChB0H,UAAU,sBAFd,wDAMA,cAAC,IAAD,CAAMM,GAAI,WAAYN,UAAU,sBAAhC,qDC7BlBO,GAAkB1C,sBAAY,CAChCC,KAAM,aACNR,aAAc,CACVC,SAAU,KACViD,eAAgB,GAEpBzC,SAAU,CACN0C,mBAAoB,SAACxC,EAAOE,GACxBF,EAAMV,SAAWY,EAAOnE,SAE5B0G,yBAA0B,SAACzC,EAAOE,GAC9BF,EAAMuC,eAAiBrC,EAAOnE,YAKzB2G,GAA+BJ,GAAxC1B,QAA4BC,GAAYyB,GAAZzB,QAC5B2B,GAAiD3B,GAAjD2B,mBAAoBC,GAA6B5B,GAA7B4B,yBAEtBE,GAAsB7B,uBAAa,kCAiB5B8B,GAAoB,SAACC,GAAD,OAAe,SAAC7C,GAC7C,GAAIA,EAAM8C,WAAWxD,SACjB,OAAOU,EAAM8C,WAAWxD,SAAS8B,MAAK,SAACZ,GAAD,OAAOA,EAAErC,MAAQ0E,OAIlDE,GAAkB,SAACC,GAAD,OAAa,SAAC/B,EAAUgC,GACnD,IAIIC,EAJEC,EH2G4B,SAACnD,GACnC,GAAIA,EAAMmB,MAAMzD,KACZ,OAAOsC,EAAMmB,MAAMzD,KAAKrD,OG7GN+I,CAAmBH,KACrCI,EAAwBC,KAAKC,MAC7B7I,aAAaG,QAAb,2BAAyCsI,KAW7C,GAR8B,OAA1BE,EACAA,EAAwB,GACjBA,EAAsBG,OAAS,IACtCN,EAAuBG,EAAsB9C,WACzC,SAACkD,GAAD,OAAOA,EAAEtF,MAAQ6E,EAAQ7E,QAI7B+E,GAAwB,EAAG,CAC3B,IAAMQ,EAA4BL,EAAsBM,QACpD,SAACF,GAAD,OAAOA,EAAEtF,MAAQ6E,EAAQ7E,OAE7BzD,aAAaC,QAAb,2BACwBwI,GACpBG,KAAKM,UAAUF,IAEnBzC,EAASuB,GAAmBkB,IAC5BzC,EAASwB,GAAyBiB,EAA0BF,cAE5DH,EAAsBQ,KAAKb,GAC3BtI,aAAaC,QAAb,2BACwBwI,GACpBG,KAAKM,UAAUP,IAEnBpC,EAASuB,GAAmBa,IAC5BpC,EAASwB,GAAyBY,EAAsBG,WAIjDd,MC7EToB,GAAclE,sBAAY,CAC5BC,KAAM,SACNR,aAAc,CACVC,SAAU,KACViD,eAAgB,EAChBwB,gBAAiB,GAErBjE,SAAU,CACNkE,eAAgB,SAAChE,EAAOE,GACpBF,EAAMV,SAAWY,EAAOnE,SAE5BkI,qBAAsB,SAACjE,EAAOE,GAC1BF,EAAMuC,eAAiBrC,EAAOnE,SAElCmI,yBAA0B,SAAClE,EAAOE,GAC9BF,EAAMuC,gBAAkBrC,EAAOnE,SAEnCoI,YAAa,SAACnE,GACVA,EAAMV,SAAW,KACjBU,EAAMuC,eAAiB,GAE3B6B,wBAAyB,SAACpE,EAAOE,GAC7BF,EAAMV,SAAWU,EAAMV,SAASqE,QAC5B,SAACF,GAAD,OAAOA,EAAEtF,MAAQ+B,EAAOnE,QAAQoC,QAGxCkG,qBAAsB,SAACrE,EAAOE,GAC1BF,EAAM+D,gBAAkB7D,EAAOnE,YAK1BuI,GAA2BR,GAApClD,QAAwBC,GAAYiD,GAAZjD,QAE5BmD,GAMAnD,GANAmD,eACAC,GAKApD,GALAoD,qBACAC,GAIArD,GAJAqD,yBACAC,GAGAtD,GAHAsD,YACAC,GAEAvD,GAFAuD,wBACAC,GACAxD,GADAwD,qBAGEE,GAAkBzD,uBAAa,0BA4BxB0D,GACT,SAACxB,GAAD,IAAUyB,EAAV,uDAAmB,EAAGC,EAAtB,8CACA,SAACzD,EAAUgC,GACP,IAKIC,EALEC,EJ6EwB,SAACnD,GACnC,GAAIA,EAAMmB,MAAMzD,KACZ,OAAOsC,EAAMmB,MAAMzD,KAAKrD,OI/EF+I,CAAmBH,KAErC0B,EAAoBrB,KAAKC,MACzB7I,aAAaG,QAAb,yBAAuCsI,KAGjB,OAAtBwB,EACAA,EAAoB,GACbA,EAAkBnB,OAAS,IAClCN,EAAuByB,EAAkBpE,WACrC,SAACkD,GAAD,OAAOA,EAAEtF,MAAQ6E,EAAQ7E,QAI7B+E,GAAwB,GACpBwB,GACAC,EAAkBzB,GAAsB0B,OAASH,EAC7CE,EAAkBzB,GAAsB0B,OAAS,GACjDD,EAAkBE,OACdF,EAAkBzB,GAClB,IAIRyB,EAAkBzB,GAAsB0B,OAASH,EAErD/J,aAAaC,QAAb,yBACsBwI,GAClBG,KAAKM,UAAUe,IAEnB1D,EAAS+C,GAAeW,IACxB1D,EAASgD,GAAqBU,EAAkBnB,WAEhDmB,EAAkBd,KAAKb,GACvBtI,aAAaC,QAAb,yBACsBwI,GAClBG,KAAKM,UAAUe,IAEnB1D,EAAS+C,GAAeW,KAE5B,IAAIG,EAAS,EACbH,EAAkBI,SAAQ,SAACC,GACvBF,GAAUE,EAAKJ,SAEnB3D,EAASgD,GAAqBa,IAC9B7D,EACIoD,GAAqBY,GAAsBN,OAqBvD,SAASM,GAAsBC,GAC3B,IAAIC,EAAW,EAKf,OAJAD,GACIA,EAAIH,SAAQ,SAACK,GACTD,GAAYC,EAAQC,MAAQD,EAAQR,SAErCO,EAEJ,IAEQb,MClDAgB,GA9FA,WACX,IAAMC,EAA8B9D,aF2BC,SAACzB,GAAD,OACrCA,EAAM8C,WAAWP,kBE3BXiD,EAA4B/D,aDsDD,SAACzB,GAAD,OAAWA,EAAMyF,OAAOlD,kBCrDnDY,EAAgB1B,aL6IY,SAACzB,GACnC,GAAIA,EAAMmB,MAAMzD,KACZ,OAAOsC,EAAMmB,MAAMzD,KAAKrD,UK9I5B,ECXsB,WACtB,MAAwBqL,mBAAS,CAC7B/D,SAASgE,gBAAgBC,YACzBjE,SAASgE,gBAAgBE,eAF7B,mBAAOC,EAAP,KAAaC,EAAb,KAKMC,EAAe,WACjBD,EAAQ,CACJpE,SAASgE,gBAAgBC,YACzBjE,SAASgE,gBAAgBE,gBAUjC,OANAI,qBAAU,WAGN,OAFAC,OAAOC,iBAAiB,SAAUH,GAE3B,kBAAME,OAAOE,oBAAoB,SAAUJ,MACnD,CAACF,IAEGA,EDRSO,GAATC,EAAP,oBAGMC,EAAe5E,SAASC,cAAc,mBACtC4E,EAAa7E,SAASC,cAAc,iBACpC6E,EAAO9E,SAASC,cAAc,QAC9B8E,EAAe,WACbH,IACAA,EAAa1E,UAAUC,OAAO,UAC9B0E,EAAW3E,UAAUC,OAAO,UAC5B2E,EAAK5E,UAAUC,OAAO,UAY9B,OATAmE,qBAAU,WACFK,GAAS,KAAOC,GAAgBC,IAChCD,EAAa1E,UAAU8E,OAAO,UAC9BH,EAAW3E,UAAU8E,OAAO,UAC5BF,EAAK5E,UAAU8E,OAAO,WAE3B,CAACL,IAIA,qBAAKvE,UAAU,SAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,eAAf,kBACA,qBAAKA,UAAU,iBAAiBC,QAAS0E,EAAzC,SACI,2BAEJ,qBAAK3E,UAAU,eAAf,SACI,qBAAIA,UAAU,eAAd,UACI,oBAAIC,QAAS0E,EAAb,SACI,cAAC,IAAD,CAAMrE,GAAG,YAAYN,UAAU,eAA/B,gEAIHoB,GACG,qBAAInB,QAAS0E,EAAb,UACI,cAAC,IAAD,CACIrE,GAAG,aACHN,UAAU,eAFd,oEAMCwD,EAA8B,GAC3B,sBAAMxD,UAAU,0BAAhB,SACKwD,OAKhBpC,GACG,qBAAInB,QAAS0E,EAAb,UACI,cAAC,IAAD,CAAMrE,GAAG,UAAUN,UAAU,eAA7B,wDAGCyD,EAA4B,GACzB,sBAAMzD,UAAU,uBAAhB,SACKyD,OAKhBrC,EACG,oBAAInB,QAAS0E,EAAb,SACI,8BACI,cAAC,EAAD,CACIrM,OAAQ8I,QAKpB,oBAAInB,QAAS0E,EAAb,SACI,cAAC,IAAD,CACIrE,GAAG,iBACHN,UAAU,iBAFd,qD,kBEvF7B,SAAS6E,GAAU1K,EAAMX,GAC5B,IAAMsL,EAAS,GACf,SAASC,EAASC,EAAgB7K,EAAMX,GACpC,IAAIyL,EACJ,OAAQD,GACJ,IAAK,aACDC,EAAiC,KAAhB9K,EAAK+K,OACtB,MACJ,IAAK,UAEDD,GADoB,kBACU9J,KAAKhB,GACnC,MAEJ,IAAK,kBAED8K,GADsB,UACU9J,KAAKhB,GACrC,MAEJ,IAAK,iBAED8K,GADoB,OACU9J,KAAKhB,GACnC,MAEJ,IAAK,WACD8K,EAAiB9K,EAAKsH,OAASjI,EAAOqJ,MAM9C,GAAIoC,EAAgB,OAAOzL,EAAO7B,QAEtC,IAAK,IAAMwN,KAAahL,EACpB,IAAK,IAAM6K,KAAkBxL,EAAO2L,GAAY,CAC5C,IAAMrJ,EAAQiJ,EACVC,EACA7K,EAAKgL,GACL3L,EAAO2L,GAAWH,IAElBlJ,IAAUgJ,EAAOK,KACjBL,EAAOK,GAAarJ,GAIhC,OAAOgJ,ECzCX,IAAMM,GAAS,SAAC,GAQT,IAPHC,EAOE,EAPFA,KACAC,EAME,EANFA,SACAzC,EAKE,EALFA,MACA/G,EAIE,EAJFA,MACAyJ,EAGE,EAHFA,eACAC,EAEE,EAFFA,mBACA1H,EACE,EADFA,KAEA,EAAwC6F,oBAAS,GAAjD,mBAAO8B,EAAP,KAAqBC,EAArB,KAKA,OACI,oCACI,uBACIL,KAAMI,EAAe,OAASJ,EAC9BvH,KAAMA,EACNkC,UAAWuF,EACXI,YAAaH,EACbF,SAAUA,EACVzC,MAAOA,IAEV/G,GAAS,4BAAIA,EAAMgC,KACV,aAATuH,GACG,sBACIrF,UACI,+BACCyF,EACK,oCACA,IAEVxF,QAvBW,WACvByF,GAAgB,SAACE,GAAD,OAAgBA,MAuBpBrB,MAAM,KACNsB,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BAZV,UAcI,sBACIC,EAAE,qSACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEnB,sBACIJ,EAAE,oHACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,iBAOvCjB,GAAOkB,aAAe,CAClBjB,KAAM,QAYKD,UC+FAvJ,GAlKO,WAClB,IAAMjE,EAAU2O,wBAChB,EAAwB5C,mBAAS,CAC7BtJ,MAAO,GACPC,SAAU,GACVkM,YAAY,IAHhB,mBAAOrM,EAAP,KAAasM,EAAb,KAKMvH,EAAWwH,cACXtF,EAAgB1B,aTyIY,SAACzB,GACnC,GAAIA,EAAMmB,MAAMzD,KACZ,OAAOsC,EAAMmB,MAAMzD,KAAKrD,US1I5B,EAA4BqL,qBAA5B,mBAAOmB,EAAP,KAAe6B,EAAf,KACMC,EAAclH,aT8JU,SAACzB,GAC/B,OAAOA,EAAMmB,MAAMtD,SS9Jb+K,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBL,GAAQ,SAACb,GAAD,mBAAC,eACFA,GADC,mBAEHkB,EAAOhJ,KAAOgJ,EAAOjE,YAUxBkE,EAAkB,CACpB1M,MAAO,CACH2M,WAAY,CACRrP,QAAS,yPAGjB2C,SAAU,CACN0M,WAAY,CACRrP,QAAS,uLAKjBsP,GAAe,EACfnC,GAAyC,IAA/BzI,OAAOC,KAAKwI,GAAQrD,SAC9BwF,GAAe,GAEnB/C,qBAAU,WACNa,MACD,CAAC5K,IAEJ,IAAM4K,EAAW,WACb,IAAMD,EAASD,GAAU1K,EAAM4M,GAE/B,OADAJ,EAAU7B,GAC4B,IAA/BzI,OAAOC,KAAKwI,GAAQrD,QA4B/B,OAJIL,GACAxJ,EAAQkK,KAAK,KAIb,sBAAM9B,UAAU,qBAAhB,SACI,qBAAKA,UAAU,YAAf,SACI,0BAASA,UAAU,sBAAnB,UACI,oBAAIA,UAAU,6BAAd,gFACA,uBACI7B,OAAO,IACP6B,UAAU,sBACVkH,SAjCC,SAACC,GAGlB,GAFAA,EAAMC,iBACUrC,IAChB,CACA,IAAMsC,EAAWzP,EAAQ0P,SAASrJ,MAC5BrG,EAAQ0P,SAASrJ,MAAMsJ,KACvB,YAENrI,ETeJ,SAAC,GAAD,IAAGlF,EAAH,EAAGA,QAASqN,EAAZ,EAAYA,SAAZ,8CACA,WAAOnI,GAAP,2BAAAjF,EAAA,6DACYI,EAAoBL,EAApBK,MAAOC,EAAaN,EAAbM,SACf4E,EAASP,KAFb,kBAI2B7E,EAAYM,MAAM,CAAEC,QAAOC,aAJtD,OAIcH,EAJd,OAKQjC,EAAoBC,UAAUgC,GAC9B+E,EAASb,EAAsB,CAAE/F,OAAQ6B,EAAK7B,UAC9CV,EAAQkK,KAAKuF,GAPrB,oDASkC,KAAMpL,SAAS9B,KAAK2B,MAAtC0L,EAThB,EASgBA,KAAM7P,EATtB,EASsBA,QACD,MAAT6P,GACMC,EAAe/P,EAAmBC,GACxCuH,EAASZ,EAAqBmJ,KAE9BvI,EAASZ,EAAqB,EAAD,KAdzC,0DADA,sDSfaoJ,CAAO,CAAE1N,QAASG,EAAMkN,gBAsBrB,UAKI,cAAC,GAAD,CACIvJ,KAAK,QACL+E,MAAO1I,EAAKE,MACZiL,SAAUuB,EACV/K,MAAOgJ,EACPU,mBAAmB,QACnBD,eAAe,yBAEnB,cAAC,GAAD,CACIF,KAAK,WACLvH,KAAK,WACL+E,MAAO1I,EAAKG,SACZgL,SAAUuB,EACV/K,MAAOgJ,EACPU,mBAAmB,WACnBD,eAAe,4BAGnB,wBAAOoC,QAAQ,aAAf,UACI,uBACI7J,KAAK,aACLuH,KAAK,WACLjI,GAAG,aACHyF,MAAM,GACN+E,QAASzN,EAAKqM,WACdlB,SA9FA,WACxBmB,GAAQ,SAACb,GAAD,mBAAC,eACFA,GADC,IAEJY,YAAarM,EAAKqM,iBA4FExG,UAAU,sCAEd,sBAAMA,UAAU,oCAAhB,SACI,qBACIuE,MAAM,KACNsB,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,uBACFC,OAAO,QACPC,YAAY,IACZC,cAAc,QACdC,eAAe,cAI3B,sBAAMrG,UAAU,oCAAhB,gGAIH4G,GACG,mBAAG5G,UAAU,uBAAb,SACK4G,IAGT,wBAAQvB,KAAK,SAASrF,UA5ElC,0BACEiH,GAAgBL,EACZ,oCACA,IAyEM,+CAIJ,cAAC,IAAD,CACItG,GAAG,gBACHN,UAAU,oCAFd,0HAMA,cAAC,IAAD,CACIM,GAAG,gBACHN,UAAU,oCAFd,gG,QC9Jb,SAAS6H,GAAY1N,GACxB,IAAM2N,EAAO,IAAIrP,KAAK0B,GAChB4N,EAAU,IAAItP,KAEpB,GAAgB,IADAsP,EAAQC,cAAgBF,EAAKE,cAC1B,CAEf,GAAe,IADAD,EAAQE,SAAWH,EAAKG,SACrB,CAEd,GAAgB,IADAF,EAAQG,WAAaJ,EAAKI,WACvB,CACf,IAAMC,EAAaJ,EAAQK,aAAeN,EAAKM,aAC/C,OAAID,GAAc,GAAKA,EAAa,EAAU,wEAC1CA,GAAc,GAAKA,EAAa,GAAW,kEAC3CA,GAAc,IAAMA,EAAa,GAC1B,mEAEJ,mEAEX,MAAM,GAAN,OAAUL,EAAKI,WAAf,YAA6BJ,EAAKM,cAEtC,OAAIN,EAAKO,UAAY,IAAMP,EAAKQ,YAAc,EACpC,IAAN,OAAWR,EAAKO,UAAhB,YACIP,EAAKQ,WAAa,EADtB,YAEIR,EAAKE,eACFF,EAAKO,WAAa,IAAMP,EAAKQ,WAAa,EAC3C,GAAN,OAAUR,EAAKO,UAAf,aACIP,EAAKQ,WAAa,EADtB,YAEIR,EAAKE,eAETF,EAAKO,UAAY,IAAMP,EAAKQ,WAAa,EACnC,IAAN,OAAWR,EAAKO,UAAhB,aACIP,EAAKQ,WAAa,EADtB,YAEIR,EAAKE,eAEH,GAAN,OAAUF,EAAKO,UAAf,YACIP,EAAKQ,WAAa,EADtB,YAEIR,EAAKE,eAGjB,OACIF,EAAKE,cAAgB,KAAOF,EAAKQ,WAAa,GAAK,IAAMR,EAAKO,UC/BtE,IAoKeE,GApKM,WACjB,IAAM3Q,EAAU2O,wBACVrH,EAAWwH,cACjB,EAAwB/C,mBAAS,CAC7B7F,KAAM,GACN0K,SAAU,GACVnO,MAAO,GACPC,SAAU,GACVmO,aAAc,GACdtI,IAAK,GACLuI,cAAe,IAPnB,mBAAOvO,EAAP,KAAasM,EAAb,KASA,EAA4B9C,qBAA5B,mBAAOmB,EAAP,KAAe6B,EAAf,KAEME,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBL,GAAQ,SAACb,GAAD,mBAAC,eACFA,GADC,mBAEHkB,EAAOhJ,KAAOgJ,EAAOjE,YAGxBzB,EAAgB1B,aX6HY,SAACzB,GACnC,GAAIA,EAAMmB,MAAMzD,KACZ,OAAOsC,EAAMmB,MAAMzD,KAAKrD,UW9HtBsO,EAAclH,aXmJU,SAACzB,GAC/B,OAAOA,EAAMmB,MAAMtD,SWlJbiL,EAAkB,CACpBjJ,KAAM,CACFkJ,WAAY,CACRrP,QAAS,yKAEbgR,SAAU,CACNhR,QAAS,8LACTkL,MAAO,IAGfxI,MAAO,CACH2M,WAAY,CACRrP,QAAS,wPAEbiR,QAAS,CACLjR,QAAS,oNAGjB2C,SAAU,CACN0M,WAAY,CACRrP,QAAS,qLAEbkR,gBAAiB,CACblR,QACI,iTAERmR,eAAgB,CACZnR,QAAS,0PAEbgR,SAAU,CACNhR,QAAS,wOACTkL,MAAO,KAKfoE,GAAe,EACfnC,GAAyC,IAA/BzI,OAAOC,KAAKwI,GAAQrD,SAC9BwF,GAAe,GAEnB/C,qBAAU,WACNa,MACD,CAAC5K,IAEJ,IAAM4K,EAAW,WACb,IAAMD,EAASD,GAAU1K,EAAM4M,GAE/B,OADAJ,EAAU7B,GAC4B,IAA/BzI,OAAOC,KAAKwI,GAAQrD,QA8B/B,OAJIL,GACAxJ,EAAQkK,KAAK,KAIb,sBAAM9B,UAAU,qBAAhB,SACI,qBAAKA,UAAU,YAAf,SACI,0BAASA,UAAU,sBAAnB,UACI,oBAAIA,UAAU,6BAAd,gFACA,uBACI7B,OAAO,IACP6B,UAAU,sBACVkH,SAnCC,SAACC,GAGlB,GAFAA,EAAMC,iBACUrC,IAChB,CACA,IXiBe/K,EWjBT+O,EAAUtQ,KAAKuC,MACfgO,ED3CP,SAAsB7O,GACzB,IAAM2N,EAAO,IAAIrP,KAAKwQ,SAAS9O,IAE/B,OAAI2N,EAAKO,UAAY,IAAMP,EAAKQ,YAAc,EACpC,IAAN,OAAWR,EAAKO,UAAhB,YAA6BP,EAAKQ,WAAlC,YAAgDR,EAAKE,eAC9CF,EAAKO,WAAa,IAAMP,EAAKQ,WAAa,EAC3C,GAAN,OAAUR,EAAKO,UAAf,aAA6BP,EAAKQ,WAAlC,YAAgDR,EAAKE,eAErDF,EAAKO,UAAY,IAAMP,EAAKQ,WAAa,EACnC,IAAN,OAAWR,EAAKO,UAAhB,aAA8BP,EAAKQ,WAAnC,YAAiDR,EAAKE,eAEhD,GAAN,OAAUF,EAAKO,UAAf,YAA4BP,EAAKQ,WAAjC,YAA+CR,EAAKE,eCgCpCS,CAAaQ,SAASF,IAChCG,EAAO,2BACN/O,GADM,IAETE,MAAOF,EAAKE,MACZC,SAAUH,EAAKG,SACfmO,aAAcO,IAElB9J,GXSelF,EWTCkP,EXSF,uCAAa,WAAOhK,GAAP,uBAAAjF,EAAA,6DAC/BiF,EAASP,KADsB,kBAGR7E,EAAYC,SAASC,GAHb,OAGrBG,EAHqB,OAI3BjC,EAAoBC,UAAUgC,GAC9B+E,EAASb,EAAsB,CAAE/F,OAAQ6B,EAAK7B,UAC9CV,EAAQkK,KAAK,aANc,oDAQD,KAAM7F,SAAS9B,KAAK2B,MAAtC0L,EARmB,EAQnBA,KAAM7P,EARa,EAQbA,QACD,MAAT6P,GACMC,EAAe/P,EAAmBC,GACxCuH,EAASZ,EAAqBmJ,KAE9BvI,EAASZ,EAAqB,EAAD,KAbN,0DAAb,0DWWF,UAKI,cAAC,GAAD,CACIR,KAAK,OACL+E,MAAO1I,EAAK2D,KACZwH,SAAUuB,EACV/K,MAAOgJ,EACPU,mBAAmB,qBACnBD,eAAe,yBAEnB,cAAC,GAAD,CACIzH,KAAK,WACL+E,MAAO1I,EAAKqO,SACZlD,SAAUuB,EACV/K,MAAOgJ,EACPU,mBAAmB,6CACnBD,eAAe,yBAEnB,cAAC,GAAD,CACIzH,KAAK,QACL+E,MAAO1I,EAAKE,MACZiL,SAAUuB,EACV/K,MAAOgJ,EACPU,mBAAmB,QACnBD,eAAe,yBAEnB,cAAC,GAAD,CACIF,KAAK,WACLvH,KAAK,WACL+E,MAAO1I,EAAKG,SACZgL,SAAUuB,EACV/K,MAAOgJ,EACPU,mBAAmB,WACnBD,eAAe,4BAElBqB,GACG,mBAAG5G,UAAU,uBAAb,SACK4G,IAGT,wBAAQ5G,UA1DpB,yBACEiH,EAA0D,GAA3C,qCAyDL,6HAIJ,cAAC,IAAD,CACI3G,GAAG,iBACHN,UAAU,oCAFd,oDCjJLmJ,GAbA,WACX,IACMC,GADU,IAAI3Q,MACQuP,cAE5B,OACI,wBAAQhI,UAAU,SAAlB,SACI,sBAAKA,UAAU,4BAAf,oBACYoJ,EADZ,6GC2BGC,GA/BE,SAAC,GAAc,IAAZvL,EAAW,EAAXA,KAERwL,EADOC,uBACPD,UAEFE,EACO,mHAAT1L,EAAkC,YAAlC,mBAA4DwL,GAEhE,OACI,qBAAKtJ,UAAU,OAAf,SACI,eAAC,IAAD,CAAMM,GAAIkJ,EAAexJ,UAAU,kBAAnC,UACI,qBACIuE,MAAM,KACNsB,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,kXACFF,KAAK,YAGb,+BAAOjI,UC6DR2L,GA9EI,SAAC,GAAiB,IAAfxI,EAAc,EAAdA,QACZ/B,EAAWwH,cAEjB,OACI,sBAAK1G,UAAU,cAAf,UACI,qBAAKA,UAAU,2BAAf,SACI,qBAAKE,IAAKe,EAAQyI,OAAQrJ,IAAI,UAElC,sBAAKL,UAAU,4BAAf,UACI,eAAC,IAAD,CACIM,GAAE,oBAAeW,EAAQ7E,KACzB4D,UAAU,uBAFd,UAIKiB,EAAQnD,KACU,KAAlBmD,EAAQ0I,OAAgB,sCAAS1I,EAAQ0I,MAAjB,UAE7B,qBAAK3J,UAAU,sBAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,qBACIA,UAAU,0BACVC,QAAS,kBACLf,EACIuD,GAA2BxB,EAAS,GAAG,KAJnD,eAUA,qBAAKjB,UAAU,2BAAf,SACKiB,EAAQ4B,QAEb,qBACI7C,UAAU,yBACVC,QAAS,kBACLf,EAASuD,GAA2BxB,KAH5C,oBAUR,sBAAKjB,UAAU,qBAAf,UAAqCiB,EAAQqC,MAA7C,0BACA,qBACItD,UAAU,yBACVC,QAAS,kBAAMf,EVyEI,SAAC+B,GAAD,OAAa,SAAC/B,EAAUgC,GAC3D,IAAME,EJ0B4B,SAACnD,GACnC,GAAIA,EAAMmB,MAAMzD,KACZ,OAAOsC,EAAMmB,MAAMzD,KAAKrD,OI5BN+I,CAAmBH,KAInC0I,EAHoBrI,KAAKC,MAC3B7I,aAAaG,QAAb,yBAAuCsI,KAEIQ,QAC3C,SAACF,GAAD,OAAOA,EAAEtF,MAAQ6E,EAAQ7E,OAE7BzD,aAAaC,QAAb,yBACsBwI,GAClBG,KAAKM,UAAU+H,IAEnB1K,EAASmD,GAAwBpB,IACjC/B,EAASiD,GAAyBlB,EAAQ4B,QAC1C3D,EAASoD,GAAqBY,GAAsB0G,MUvFZC,CAAwB5I,KAFpD,SAII,sBACIsD,MAAM,KACNsB,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,UAOI,sBACI8D,EAAE,UACFvF,MAAM,UACNsB,OAAO,IACPkE,GAAG,MACHC,UAAU,4BACVjE,KAAK,UAET,sBACIxB,MAAM,UACNsB,OAAO,IACPkE,GAAG,MACHC,UAAU,+DACVjE,KAAK,sBCqElBkE,GAtIA,WACX,IAAM/K,EAAWwH,cACbwD,EAAiBxK,aXoDM,SAACzB,GAAD,OAAWA,EAAMyF,OAAOnG,YWlD7C6F,EAAW1D,aXyImB,SAACzB,GAAD,OAAWA,EAAMyF,OAAO1B,mBWtIxDkI,EADAA,GAAkBA,EAAezI,OAAS,EACzByI,EAAe3N,KAAI,SAAC0E,GACjC,OACI,yBAEIjB,UAAU,gCAFd,SAII,cAAC,GAAD,CAEIiB,QAASA,GADJA,EAAQ7E,IAAM,WAJlB6E,EAAQ7E,QAYrB,oBAAI4D,UAAU,qBAAd,+KAOR,MAA4B2D,oBAAS,GAArC,mBAAOwG,EAAP,KAAgBC,EAAhB,KACMC,EAAuB,WACzBD,GAAS,GACTlL,GXyB6B,SAACA,EAAUgC,GAC5C,IAAME,EJqF4B,SAACnD,GACnC,GAAIA,EAAMmB,MAAMzD,KACZ,OAAOsC,EAAMmB,MAAMzD,KAAKrD,OIvFN+I,CAAmBH,KACzCvI,aAAaQ,WAAb,yBAA0CiI,IAC1ClC,EAASkD,MACTlD,EAASoD,GAAqB,QWf9B,OACI,uBAAMtC,UAAU,OAAhB,UACI,sBAAKA,UAAU,YAAf,UACI,cAAC,GAAD,CAAUlC,KAAK,mHACf,0BAASkC,UAAU,eAAnB,UACKoD,EAAW,GACR,oBAAIpD,UAAU,2BAAd,8HAIJ,sBAAKA,UAAU,oBAAf,UACI,yBAASA,UAAU,2BAAnB,SACKkK,IAEL,0BAASlK,UAAU,4BAAnB,UACI,sBAAKA,UAAU,0BAAf,6CACW,iCAAOoD,EAAP,6BAEX,wBACIpD,UAxBpB,yCACCoD,EAAW,EAAI,iCAAmC,IAwB/BnD,QAAS,kBAAMoK,KAFnB,yGAUhB,qBACIrK,UACI,eAAiBmK,EAAU,sBAAwB,IAF3D,SAKI,sBAAKnK,UAAU,uBAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,qBACIuE,MAAM,KACNsB,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,uBACFC,OAAO,QACPC,YAAY,IACZC,cAAc,QACdC,eAAe,cAI3B,qBAAKrG,UAAU,oBAAf,yIAGA,qBACIA,UAAU,4BACVC,QAAS,SAACkH,GAnE1BiD,GAAS,IAiEG,SAII,sBACI7F,MAAM,KACNsB,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,UAOI,sBACI8D,EAAE,UACFvF,MAAM,UACNsB,OAAO,IACPkE,GAAG,MACHC,UAAU,4BACVjE,KAAK,UAET,sBACIxB,MAAM,UACNsB,OAAO,IACPkE,GAAG,MACHC,UAAU,+DACVjE,KAAK,wBCpEtBuE,GA7DQ,SAAC,GAA6B,IAA3BpD,EAA0B,EAA1BA,SAAUpG,EAAgB,EAAhBA,UAC1BM,EAAgB1B,ahBmJY,SAACzB,GACnC,GAAIA,EAAMmB,MAAMzD,KACZ,OAAOsC,EAAMmB,MAAMzD,KAAKrD,UgBpJ5B,EAAwBqL,mBAAS,IAAjC,mBAAOxJ,EAAP,KAAasM,EAAb,KAgBM8D,EAAY,WACd9D,EAAQ,KAUZ,OACI,mCACKrF,GACG,yBAASpB,UAAU,gBAAnB,SACI,uBAAMA,UAAU,qBAAhB,UACI,0BACIlC,KAAK,UACLV,GAAG,UACHuI,YAAY,kFACZ3F,UAAU,yBACVsF,SAnCH,SAAC,GAAgB,IAAdwB,EAAa,EAAbA,OACpBL,GAAQ,SAACb,GAAD,mBAAC,eACFA,GADC,mBAEHkB,EAAOhJ,KAAOgJ,EAAOjE,YAiCNA,MAAO1I,EAAKgC,SAAW,KAE3B,wBACIkJ,KAAK,SACLrF,UApBhB,wBACC7F,EAAKgC,QAAU,+BAAiC,IAoBjC8D,QAjCH,SAACuK,GAClBA,EAAEpD,iBACFF,EAAS/M,EAAM2G,GACfyJ,KA2BgB,8FC4CTE,GArFC,SAAC,GAMV,IALHtO,EAKE,EALFA,QACYuO,EAIV,EAJFC,WACKvN,EAGH,EAHFhB,IACA9D,EAEE,EAFFA,OACAsS,EACE,EADFA,SAEMxJ,EAAgB1B,ajB4IY,SAACzB,GACnC,GAAIA,EAAMmB,MAAMzD,KACZ,OAAOsC,EAAMmB,MAAMzD,KAAKrD,UiB5ItBuS,EAAOnL,YAAYP,EAAY7G,IAYrC,OACI,mCACI,0BAAS0H,UAAU,iBAAnB,UACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,qBAAKE,IAAI,8BAA8BG,IAAI,aAE/C,sBAAKL,UAAU,yBAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,oBAAGA,UAAU,sBAAb,UACI,+BAfD,SAAClC,GACxB,GAAIA,EACA,OAAOA,EAAKzC,MAAM,EAAG,GAAGyP,cAAgBhN,EAAKzC,MAAM,GAaxB0P,CAAmBF,EAAK/M,QAC/B,+BArBP,SAACkN,GAClB,GAAIA,EACA,OAAOA,EAAS3P,MAAM,EAAG,GAAGyP,cAAgB,IAmBjBG,CAAaJ,EAAKrC,eAE7B,mBAAGxI,UAAU,sBAAb,SACK6H,GAAY6C,QAGrB,qBAAK1K,UAAU,yBAAf,SACI,mBAAGA,UAAU,sBAAb,SAAoC7D,YAI/CiF,IAAkB9I,GACf,qBACI0H,UAAU,uBACVC,QAAS,kBAAM2K,EAASxN,IAF5B,SAII,sBACImH,MAAM,KACNsB,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,UAOI,sBACI8D,EAAE,UACFvF,MAAM,UACNsB,OAAO,IACPkE,GAAG,MACHC,UAAU,4BACVjE,KAAK,UAET,sBACIxB,MAAM,UACNsB,OAAO,IACPkE,GAAG,MACHC,UAAU,+DACVjE,KAAK,qB,oBCzE/BmF,GAAkB,YAElBC,GAAiB,CACnBC,cAAc,WAAD,4BAAE,WAAOpR,GAAP,iBAAAC,EAAA,sEACY0C,EAAYzC,KAAKgR,GAAiBlR,GAD9C,uBACHG,EADG,EACHA,KADG,kBAEJA,GAFI,2CAAF,mDAAC,GAIdkR,YAAY,WAAD,4BAAE,WAAOvK,GAAP,iBAAA7G,EAAA,sEACc0C,EAAYC,IAAIsO,GAAiB,CACpDxR,OAAQ,CACJ4R,QAAS,YACTC,QAAQ,GAAD,OAAKzK,MAJX,uBACD3G,EADC,EACDA,KADC,kBAOFA,GAPE,2CAAF,mDAAC,GASZqR,SAAS,WAAD,4BAAE,8BAAAvR,EAAA,sEACiB0C,EAAYC,IAAIsO,IADjC,uBACE/Q,EADF,EACEA,KADF,kBAECA,GAFD,2CAAF,kDAAC,GAITsR,cAAc,WAAD,4BAAE,WAAOC,GAAP,iBAAAzR,EAAA,sEACY0C,EAAYG,OAAOoO,GAAkBQ,GADjD,uBACHvR,EADG,EACHA,KADG,kBAEJA,GAFI,2CAAF,mDAAC,IAKHgR,MCtBTQ,GAAgB9N,sBAAY,CAC9BC,KAAM,WACNR,aAAc,CACVC,SAAU,KACVC,WAAW,EACX1B,MAAO,MAEXiC,SAAU,CACN6N,kBAAmB,SAAC3N,GAChBA,EAAMT,WAAY,GAEtBqO,iBAAkB,SAAC5N,EAAOE,GACtBF,EAAMV,SAAWY,EAAOnE,QACxBiE,EAAMT,WAAY,GAEtBsO,sBAAuB,SAAC7N,EAAOE,GAC3BF,EAAMnC,MAAQqC,EAAOnE,QACrBiE,EAAMT,WAAY,GAEtBuO,eAAgB,SAAC9N,EAAOE,GACpBF,EAAMV,SAASuE,KAAK3D,EAAOnE,UAE/BgS,eAAgB,SAAC/N,EAAOE,GACpBF,EAAMV,SAAWU,EAAMV,SAASqE,QAC5B,SAACqK,GAAD,OAAOA,EAAE7P,MAAQ+B,EAAOnE,eAMvBkS,GAA6BP,GAAtC9M,QAA0BC,GAAY6M,GAAZ7M,QAE9B8M,GAKA9M,GALA8M,kBACAC,GAIA/M,GAJA+M,iBACAC,GAGAhN,GAHAgN,sBACAC,GAEAjN,GAFAiN,eACAC,GACAlN,GADAkN,eAGEG,GAAsBpN,uBAAa,gCACnCqN,GAAyBrN,uBAAa,mCACtCsN,GAAwBtN,uBAAa,kCAuCpC,SAASuN,KACZ,8CAAO,WAAgBpN,EAAUgC,GAA1B,mBAAAjH,EAAA,6DACHiF,EAASmN,MADN,kBAG2BlB,GAAeK,WAH1C,iBAGSrP,EAHT,EAGSA,UAEEoQ,EAAiBpQ,EAAQyF,QAC3B,SAACqB,GAAD,OAAUA,EAAK3K,SnB8DG,SAAC2F,GACnC,GAAIA,EAAMmB,MAAMzD,KACZ,OAAOsC,EAAMmB,MAAMzD,KAAKrD,OmBhEc+I,CAAmBH,QAEjDhC,EACII,EAAsB,CAClBoJ,cAAe6D,EAAe9K,WAItCvC,EACII,EAAsB,CAClBoJ,cAAe,KAhB5B,gDAqBCxJ,EAAS4M,GAAsB,EAAD,KArB/B,yDAAP,wDA0BWI,UC9CAM,GAlDE,SAAC,GAAmB,IAAjB1L,EAAgB,EAAhBA,UACVM,EAAgB1B,apByIY,SAACzB,GACnC,GAAIA,EAAMmB,MAAMzD,KACZ,OAAOsC,EAAMmB,MAAMzD,KAAKrD,UoB1ItBmU,EAAW/M,aDwCY,SAACzB,GAAD,OAAWA,EAAMwO,SAASlP,YCvCjD2B,EAAWwH,cACjBxC,qBAAU,WACNhF,ED2BwB,SAAC4B,GAAD,8CAAe,WAAO5B,GAAP,iBAAAjF,EAAA,6DAC3CiF,EAAS0M,MADkC,kBAGbT,GAAeE,YAAYvK,GAHd,gBAG/B3E,EAH+B,EAG/BA,QACR+C,EAAS2M,GAAiB1P,IAJa,gDAMvC+C,EAAS4M,GAAsB,EAAD,KANS,yDAAf,sDC3BfY,CAAiB5L,MAC3B,IACH,IAAMtD,EAAYkC,aDoCwB,SAACzB,GAAD,OAC1CA,EAAMwO,SAASjP,aCnCTmP,EAAsB,SAACjB,GACzBxM,ED8CqB,SAACwM,GAAD,8CAAe,WAAOxM,GAAP,SAAAjF,EAAA,6DACxCiF,EAASkN,MAD+B,kBAGVjB,GAAeM,cAAcC,GAHnB,cAG5BvP,UAEJ+C,EAAS8M,GAAeN,IACxBxM,EAASoN,OANuB,gDASpCpN,EAAS4M,GAAsB,EAAD,KATM,yDAAf,sDC9CZL,CAAcC,KAarBkB,EAAiBtB,mBAAQmB,EAAU,CAAC,cAAe,CAAC,SAE1D,OACI,sBAAKzM,UAAU,WAAf,UACI,oBAAIA,UAAU,kBAAd,mDACExC,GACEoP,EAAerQ,KAAI,SAACsQ,GAAD,OACf,cAAC,GAAD,2BAEQA,GAFR,IAGIjC,SAAU+B,IAFLE,EAAQzQ,SAKvBoB,GAAuC,IAA1BoP,EAAenL,QAC1B,oBAAIzB,UAAU,qBAAd,SACKoB,EACK,mQACA,4LAGd,cAAC,GAAD,CAAgB8F,SA/BH,SAAC/M,EAAM2G,GDkCH,IAAC9G,ECjCtBkF,GDiCsBlF,EChCJ,2BACPG,GADM,IAET2G,UAAWA,EACXxI,OAAQ8I,ID6BK,uCAAa,WAAOlC,GAAP,iBAAAjF,EAAA,6DACtCiF,EAASiN,MAD6B,kBAGRhB,GAAeC,cAAcpR,GAHrB,gBAG1BmC,EAH0B,EAG1BA,QACR+C,EAAS6M,GAAe5P,IACxB+C,EAASoN,MALyB,kDAOlCpN,EAAS4M,GAAsB,EAAD,KAPI,0DAAb,yDCHuBhL,UAAWA,QC1DlDgM,GAAY,CACrBC,WAAY,CACR,iCACA,uCACA,kFACA,sHACA,mDACA,wFACA,0GACA,2GAEJC,KAAM,CACF1J,MAAO,2BACPxF,KAAM,mDACNmP,OAAQ,kFACRC,QAAS,2GAEbC,SAAU,CACNC,YACI,sTACJC,eACI,oUCdGC,OAPf,SAAoBxF,GAChB,OAAIrP,KAAKuC,MAAQ8M,EAAO,KCGtByF,GAAkB,CACpB3Q,IAAI,WAAD,4BAAE,4BAAA3C,EAAA,sEACiB0C,EAAYC,IAJb,aAGhB,cACK4Q,EADL,yBAEMA,EAAIrT,MAFV,2CAAF,kDAAC,IAKOoT,MCNTE,GAAgB5P,sBAAY,CAC9BC,KAAM,WACNR,aAAc,CACVC,SAAU,KACVC,WAAW,EACX1B,MAAO,KACP4R,UAAW,MAEf3P,SAAU,CACN4P,kBAAmB,SAAC1P,GAChBA,EAAMT,WAAY,GAEtBoQ,iBAAkB,SAAC3P,EAAOE,GACtBF,EAAMV,SAAWY,EAAOnE,QACxBiE,EAAMT,WAAY,EAClBS,EAAMyP,UAAYjV,KAAKuC,OAE3B6S,sBAAuB,SAAC5P,EAAOE,GAC3BF,EAAMnC,MAAQqC,EAAOnE,QACrBiE,EAAMT,WAAY,MAKbsQ,GAA6BL,GAAtC5O,QAA0BC,GAAY2O,GAAZ3O,QAC1B6O,GAA+D7O,GAA/D6O,kBAAmBC,GAA4C9O,GAA5C8O,iBAAkBC,GAA0B/O,GAA1B+O,sBAoB9BC,MCjDR,SAASC,GAAajS,GACzB,IAAM4I,EAAO9E,SAASC,cAAc,QAE9BmO,EAAepO,SAASqO,cAAc,OAC5CD,EAAahO,UAAY,cACzBgO,EAAaE,YAAcpS,EAC3B4I,EAAKyJ,OAAOH,GACZI,YAAW,WACPJ,EAAapJ,WACd,KCGP,IA0JeyJ,GA1JK,SAAC,GAAmB,IAAjBvN,EAAgB,EAAhBA,UACb5B,EAAWwH,cACX4H,EAAW5O,aF8BY,SAACzB,GAAD,OAAWA,EAAMqQ,SAAS/Q,YE5BjDgR,EAAe7O,aF6Ba,SAACzB,GAAD,OAAWA,EAAMqQ,SAASxS,SE5BxDyS,GACAR,GAAaQ,GAEjB,IAAMnN,EAAgB1B,a1BqIY,SAACzB,GACnC,GAAIA,EAAMmB,MAAMzD,KACZ,OAAOsC,EAAMmB,MAAMzD,KAAKrD,U0BtI5B,EAAwCqL,qBAAxC,mBAAO6K,EAAP,KAAqBC,EAArB,KAEAvK,qBAAU,WACFoK,GACAG,EACIH,EAASjP,MAAK,SAAC4B,GACX,OAAOA,EAAQ7E,MAAQ0E,QAIpC,CAACwN,IAEJ,MAAwC3K,mBAAS,GAAjD,mBAAO+K,EAAP,KAAqBC,EAArB,KAWMC,EAAclP,YAAYmB,GAAkBC,IAElD,OACI,sBAAMd,UAAU,OAAhB,SACI,sBAAKA,UAAU,YAAf,UACI,cAAC,GAAD,CAAUlC,KAAK,mHACd0Q,EACG,0BAASxO,UAAU,aAAnB,UACI,sBAAKA,UAAU,4BAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,qBACIE,IAAKsO,EAAa9E,OAClBrJ,IAAI,cAGZ,sBAAKL,UAAU,0BAAf,UACI,qBAAIA,UAAU,yBAAd,UACKwO,EAAa1Q,KACU,KAAvB0Q,EAAa7E,OACV,sCAAS6E,EAAa7E,MAAtB,UAGR,sBAAK3J,UAAU,oBAAf,UACI,qBACIA,UAAU,0BACVC,QAhCf,WACjByO,GAAgB,GAChBC,GAAgB,SAAC/I,GAAD,OAAeA,EAAY,MA4Bf,eAMA,qBAAK5F,UAAU,2BAAf,SACK0O,IAEL,qBACI1O,UAAU,yBACVC,QA5CjB,WACnB0O,GAAgB,SAAC/I,GAAD,OAAeA,EAAY,MAyCX,kBAOJ,sBAAK5F,UAAU,iBAAf,UACKwO,EAAalL,MADlB,0BAGClC,GACG,wBACIpB,UAAU,iBACVC,QAAS,kBACLf,EACIuD,GACI+L,EACAE,KANhB,iHAcFtN,GACE,wBACIpB,UAAU,iBACVC,QAAS,kBACL8N,GACIjB,GAAUK,SACLC,cALjB,sHAcZ,qBACIpN,UACI,sBACC4O,EACK,6BACA,IAEV3O,QACImB,EACM,kBACIlC,EACI8B,GAAgBwN,KAExB,kBACIT,GACIjB,GAAUK,SACLE,iBAhB3B,SAoBI,qBACI9I,MAAM,KACNsB,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,upBACFF,KAAK,iBAKrB,qBAAK/F,UAAU,sBAAf,SACI,cAAC,GAAD,CAAUc,UAAWA,SAI7B,8LC1FL+N,GA9DE,SAAC,GAIX,IAHHC,EAGE,EAHFA,cACAC,EAEE,EAFFA,oBACAC,EACE,EADFA,qBAEA,EAAwCrL,oBAAS,GAAjD,mBAAOsL,EAAP,KAAqBC,EAArB,KAEMC,EAAiBvP,SAASC,cAAc,aACxCuP,EAAUxP,SAASC,cAAc,YACjC6E,EAAO9E,SAASC,cAAc,QAE9BwP,EAAgB,WAClBF,EAAerP,UAAUC,OAAO,mBAChCqP,EAAQtP,UAAUC,OAAO,kBACzB2E,EAAK5E,UAAUC,OAAO,QACtBmP,GAAgB,SAACtJ,GAAD,OAAgBA,MAGpC,OACI,qCACI,yBACI5F,UAAU,gCACVC,QAASoP,EAFb,UAIKJ,EAAe,6CAAY,6CAJhC,6DAMA,qBAAKjP,UAAU,UAAUC,QAASoP,IAClC,0BAASrP,UAAU,6BAAnB,UACI,oBAAIA,UAAU,wBAAd,qEACA,qBAAKA,UAAU,kBAAf,SACK8M,GAAUC,WACLD,GAAUC,WAAWxQ,KAAI,SAAC+S,GACtB,OACI,wBAEItP,UACI,wBACCsP,IAASN,EACJ,yBACA,IAEV/O,QAAS,kBAAM8O,EAAoBO,IARvC,SAUKA,GATIA,MAajB,wDAEV,qBAAKtP,UAAU,kBAAkBC,QAAS6O,EAA1C,0GCQDS,GAzDF,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YA6BpB,OACI,sBAAKzP,UAAU,qBAAf,UACI,oBAAIA,UAAU,oBAAd,8FACA,qBAAKA,UAAU,cAAf,SACK8M,GAAUE,KACL3Q,OAAOC,KAAKwQ,GAAUE,MAAMzQ,KAAI,SAAC+S,GAC7B,OACI,mBAEIrP,QAAS,SAACkH,GAAD,OArCpB,SAACA,EAAOmI,GACvB,IAAMI,EAAS9P,SAAS+P,iBAAiB,eACnCC,EAAMzI,EAAML,OAGd8I,EAAI9P,UAAU+P,SADd,qBAEAH,EAAO1M,SAAQ,SAACsM,GACZA,EAAKxP,UAAU8E,OAAO,qBACtB0K,EAAKxP,UAAU8E,OAAO,4BACtBgL,EAAI9P,UAAUgQ,IAAI,gCAGtBJ,EAAO1M,SAAQ,SAACsM,GACZA,EAAKxP,UAAU8E,OAAO,qBACtB0K,EAAKxP,UAAU8E,OAAO,+BAE1BgL,EAAI9P,UAAUC,OAAO,sBAErBuP,IAASG,EAAYM,KACrBP,EAAO,2BACAC,GADD,IAEFO,MAA6B,QAAtBP,EAAYO,MAAkB,OAAS,SAGlDR,EAAO,CAAEO,KAAMT,EAAMU,MAAO,QAacC,CAAW9I,EAAOmI,IACtCtP,UAAU,mBAHd,SAKK8M,GAAUE,KAAKsC,IAJXA,MAQjB,qFC1BPY,GApBA,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,kBAC3B,OACI,yBAASpQ,UAAU,sBAAnB,SACI,sBAAM7B,OAAO,IAAI6B,UAAU,eAA3B,SACI,uBACIqF,KAAK,OACLrF,UAAU,gBACV2F,YAAY,4EACZ9C,MAAOsN,EACP7K,SAAU,SAAC6B,GAAD,OAAWiJ,EAAkBjJ,WCmH5CkJ,GApHM,SAAC,GAAiB,IAAfpP,EAAc,EAAdA,QACd/B,EAAWwH,cACIhH,aNgCa,SAACzB,GAAD,OAAWA,EAAMqQ,SAASxS,UM9BxDiS,KAEJ,IAGIuC,EASAC,EAZEnP,EAAgB1B,a9BwIY,SAACzB,GACnC,GAAIA,EAAMmB,MAAMzD,KACZ,OAAOsC,EAAMmB,MAAMzD,KAAKrD,U8BzItBsW,EAAclP,YAAYmB,GAAkBI,EAAQ7E,MAsB1D,OAlBIkU,EAD4B,IAA5BE,OAAOvP,EAAQiM,UAAkBsD,OAAOvP,EAAQiM,SAAW,KAAO,EACrD,6CACsB,IAA5BsD,OAAOvP,EAAQiM,SACT,iCAEA,uCAIbjM,EAAQgM,QAAU,KAAOhM,EAAQgM,QAAU,EAC3CsD,EAAc,QACPtP,EAAQgM,QAAU,KAAOhM,EAAQgM,QAAU,IAClDsD,EAAc,aACPtP,EAAQgM,QAAU,KAAOhM,EAAQgM,QAAU,IAClDsD,EAAc,SACPtP,EAAQgM,QAAU,MACzBsD,EAAc,OAId,sBAAKvQ,UAAU,4BAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,cAAC,IAAD,CAAMM,GAAE,oBAAeW,EAAQ7E,KAA/B,SACI,qBAAK4D,UAAU,uBAAf,SACI,qBAAKE,IAAKe,EAAQyI,OAAQrJ,IAAI,YAGtC,sBAAKL,UAAU,wBAAf,UACI,qBAAIA,UAAU,uBAAd,UACKiB,EAAQnD,KACU,KAAlBmD,EAAQ0I,OACL,sCAAS1I,EAAQ0I,MAAjB,UAGR,sBAAK3J,UAAU,kBAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,qBACIuE,MAAM,KACNsB,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,upBACFF,KAAMwK,MAGd,4BAAItP,EAAQgM,YAEhB,sBAAKjN,UAAU,mBAAf,UACKiB,EAAQiM,QADb,IACuBoD,QAG3B,sBAAKtQ,UAAU,iBAAf,UAAiCiB,EAAQqC,MAAzC,0BACA,wBACItD,UAAU,qCACVC,QACImB,EACM,kBACIlC,EACIuD,GAA2BxB,KAEnC,kBACI8M,GACIjB,GAAUK,SAASC,cAVzC,sHAkBR,qBACIpN,UACI,sBACC4O,EAAc,6BAA+B,IAElD3O,QACImB,EACM,kBAAMlC,EAAS8B,GAAgBC,KAC/B,kBAAM8M,GAAajB,GAAUK,SAASE,iBARpD,SAWI,qBACI9I,MAAM,KACNsB,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,upBACFF,KAAK,kBClEd0K,GA5CI,SAAC,GAKb,IAJHC,EAIE,EAJFA,kBACAC,EAGE,EAHFA,YACAC,EAEE,EAFFA,WACAC,EACE,EADFA,YAEMC,EAAcC,KAAKC,KAAKN,EAAoBC,GAClD,GAAoB,IAAhBG,EACA,OAAO,KAEX,IAAMG,EAAQC,KAAEC,MAAM,EAAGL,EAAc,GAEvC,OACI,8BACI,oBAAI9Q,UAAU,aAAd,SACKiR,EAAM1U,KAAI,SAAC6U,GACR,OACI,oBACIpR,UACI,oBACCoR,IAASP,EAAc,UAAY,IAH5C,SAOI,wBACI7Q,UAAU,mBACVC,QAAS,kBAAM2Q,EAAWQ,IAF9B,SAIKA,KANAA,WCfjC,IAyHeC,GAzHM,WACjB,IAAM/C,EAAW5O,aRgCY,SAACzB,GAAD,OAAWA,EAAMqQ,SAAS/Q,YQ9BvD,EAA4BoG,mBAAS,CAAEoM,KAAM,GAAIC,MAAO,KAAxD,mBAAOsB,EAAP,KAAeC,EAAf,KAKA,EAAsC5N,mBAAS,GAA/C,mBAAOkN,EAAP,KAAoBW,EAApB,KAEA,EAAwD7N,qBAAxD,mBAAOqL,EAAP,KAA6ByC,EAA7B,KAEA,EAAsC9N,mBAAS,IAA/C,mBAAOwM,EAAP,KAAoBuB,EAApB,KACA,EAAgE/N,qBAAhE,mBAAOgO,EAAP,KAAiCC,EAAjC,KAcA1N,qBAAU,WACNsN,EAAe,KAChB,CAACxC,IAGJ,IAmBI6C,EAdJ3N,qBAAU,WACFiM,EAAY1O,OAAS,GACrBmQ,EACItD,EAAS1M,QAAO,SAACX,GAAD,OACZA,EAAQnD,KACHgU,cACAC,QAAQ,OAAQ,IAChBC,SAAS7B,EAAY2B,cAAc5M,cAIrD,CAACiL,IAKA0B,EADA7C,EAC2BV,EAAS1M,QAChC,SAAC0N,GAAD,OAAUA,EAAK2C,WAAajD,KAEzBmB,EAAY1O,OAAS,EACDkQ,EAEArD,EAG/B,IAkBI4D,EAlBEC,EAAiBjB,KAAE5F,QACrBuG,EACA,CAACP,EAAOvB,MACR,CAACuB,EAAOtB,QAGNU,EAAoBmB,EACpBA,EAAyBpQ,OACzB,EAEA2Q,ECjFH,SAAkBC,EAAOC,EAAYC,GACxC,IAAMC,GAAcF,EAAa,GAAKC,EACtC,OAAOrB,KAAEmB,GAAOhX,MAAMmX,GAAYC,KAAKF,GAAU1P,QD+E5B6P,CAASP,EAAgBtB,EAzD1B,GA2EpB,OARIqB,EADA5D,EACmB8D,EAAa7V,KAAI,SAAC0E,GACjC,OAAO,cAAC,GAAD,CAAgCA,QAASA,GAAtBA,EAAQ7E,QAGnB,gIAKnB,sBAAM4D,UAAU,OAAhB,SACI,sBAAKA,UAAU,YAAf,UACI,cAAC,GAAD,CACImQ,YAAaA,EACbC,kBA/DU,SAACjJ,GACvBuK,GAAe,kBAAMvK,EAAML,OAAOjE,SAClC4O,IACAD,EAAe,MA8DP,0BAASxR,UAAU,wBAAnB,UACI,cAAC,GAAD,CACIgP,qBAAsBA,EACtBD,oBA/EQ,SAACO,GACzBmC,EAAwBnC,GACxBkC,EAAe,GACfE,EAAe,KA6EC5C,cAzBE,WAClB2C,OA0BY,0BAASzR,UAAU,gBAAnB,UACI,cAAC,GAAD,CAAMwP,OApGX,SAACF,GACZiC,EAAUjC,IAmG4BG,YAAa6B,IACnC,yBAAStR,UAAU,6BAAnB,SACKkS,IAEL,cAAC,GAAD,CACIxB,kBAAmBA,EACnBC,YA/FJ,EAgGIC,WA/FL,SAAC0B,GAChBd,EAAec,IA+FKzB,YAAaA,gBE/G1B8B,GAPE,WACb,IACM7R,EADSyI,uBACUzI,UAEzB,OAAOA,EAAY,cAAC,GAAD,CAAaA,UAAWA,IAAgB,cAAC,GAAD,KCUhD8R,GAhBM,WACjB,OACI,sBAAM5S,UAAU,QAAhB,SACI,0BAASA,UAAU,YAAnB,UACI,0EACA,0IACA,cAAC,IAAD,CAAMM,GAAG,YAAT,SACI,sBAAMN,UAAU,eAAhB,qLC8BL6S,GAjCO,WAClB,IAIIC,EAJExE,EAAW5O,aZoCY,SAACzB,GAAD,OAAWA,EAAMqQ,SAAS/Q,YYlCjDwV,EAAwBrT,ajC0BC,SAACzB,GAAD,OAAWA,EAAM8C,WAAWxD,YiCT3D,OAbIuV,EADAC,GAA0D,IAAjCA,EAAsBtR,OAE3C,oBAAIzB,UAAU,qBAAd,2LAIGsO,GAAYyE,EACAA,EAAsBxW,KAAI,SAAC0E,GAC1C,OAAO,cAAC,GAAD,CAAgCA,QAASA,GAAtBA,EAAQ7E,QAGnB,4OAInB,sBAAM4D,UAAU,OAAhB,SACI,qBAAKA,UAAU,YAAf,SACI,0BAASA,UAAU,eAAnB,UACI,cAAC,GAAD,CAAUlC,KAAK,mHACf,oBAAIkC,UAAU,2BAAd,oEACA,8BAAM8S,Y,kBCiBXE,GA9CE,WACb,IAAMC,EACI,oDADJA,EAEO,6DAFPA,EAGS,uCAHTA,EAIK,8FAEX,EAA0BtP,mBAAS,MAAnC,mBAAO7H,EAAP,KAAcoX,EAAd,KACA,EAA4BvP,mBAASsP,GAArC,mBAAOzW,EAAP,KAAe2W,EAAf,KACA,EAAgCxP,mBAAS,GAAzC,mBAAOyP,EAAP,KAAiBC,EAAjB,KACA,EAA0B1P,mBAAS,GAAnC,mBAAO2P,EAAP,KAAcC,EAAd,KACMC,EAAelF,GAAS7M,OACxBgS,EAAiB,WACnBF,GAAS,SAAC3N,GAAD,OAAeA,EAAY,MAbrB,4CA+BnB,gCAAA3L,EAAA,8EAE2BqU,IAF3B,gEAEmBoF,EAFnB,iBAGkB/W,EAAYE,IAAI,YAAc6W,EAAKtX,IAAKsX,GAH1D,OAIYD,IAJZ,gMAOQP,EAAS,EAAD,IACRC,EAAUF,GARlB,wEA/BmB,sBA2CnB,OAfA/O,qBAAU,YAba,WACL,IAAVoP,GAAe9W,IAAWyW,GAC1BE,EAAUF,GAEd,IAAMU,EAAc5C,KAAK6C,MAAON,EAAQE,EAAgB,KACpDJ,EAAWO,GACXN,GAAY,kBAAMM,KAEF,MAAhBA,GACAR,EAAUF,GAKdY,KACD,CAACP,IAaG,CAAExX,QAAOgY,WA3CG,2CA2CSV,WAAU5W,WCR3BuX,GAnCI,WACf,MAAgDf,KAAxClX,EAAR,EAAQA,MAAOgY,EAAf,EAAeA,WAAYV,EAA3B,EAA2BA,SAAU5W,EAArC,EAAqCA,OAKrC,OACI,sBAAMwD,UAAU,aAAhB,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,oBAAIA,UAAU,oBAAd,kLAGA,qBAAIA,UAAU,uBAAd,gIAEKxG,EAAOyB,WAAa,kBAAe,uDAExC,+BACI,wEAAauB,KACb,oFAAe4W,EAAf,OACCtX,GACG,qBAAIkE,UAAU,oBAAd,mDACalE,QAIrB,wBAAQkE,UAAU,kBAAkBC,QAxBhC,WAChB6T,KAuBY,sH,qCCQLE,GAjCQ,SAAC,GAAiD,IAApCC,EAAmC,EAA9CC,UAAsBC,EAAwB,EAAxBA,SAAaC,EAAW,mBAC9D1W,EAAagC,avC2JY,SAACzB,GAChC,OAAOA,EAAMmB,MAAM1B,cuC1JnB,OACI,cAAC,SAAD,2BACQ0W,GADR,IAEIC,OAAQ,SAACC,GACL,OAAK5W,EAYEuW,EAAY,cAACA,EAAD,eAAeK,IAAYH,EAVtC,cAAC,YAAD,CACI7T,GAAI,CACAiU,SAAU,iBACVtW,MAAO,CACHsJ,KAAM+M,EAAMhN,SAASiN,kBCR1CC,GARO,WAClB,OACI,qBAAKxU,UAAU,iBAAf,SACI,qBAAKA,UAAU,8BCgBZyU,GAfK,SAAC,GAAkB,IAAhBN,EAAe,EAAfA,SACbjV,EAAWwH,cACX/I,EAAa+B,azC4JY,SAACzB,GAChC,OAAOA,EAAMmB,MAAMzB,cyCzJnB,OAHAuG,qBAAU,WACDvG,GAAYuB,EAASD,OAC3B,IACEtB,EACEwW,EADiB,cAAC,GAAD,KC+FbO,GAnGK,WAChB,IAAM9c,EAAU2O,wBACVoO,EAAcjV,a1C+HgB,SAACzB,GACrC,GAAIA,EAAMmB,MAAMzD,KACZ,OAAOsC,EAAMmB,MAAM7B,SAAS8B,MACxB,SAACZ,GAAD,OAAOA,EAAErC,MAAQ6B,EAAMmB,MAAMzD,KAAKrD,a0CjIpC4G,EAAWwH,cAEjB,EAAwB/C,mBAAS,CAC7B7F,KAAM6W,EAAY7W,MAAQ,GAC1B0K,SAAUmM,EAAYnM,UAAY,GAClCpM,IAAKuY,EAAYvY,MAHrB,mBAAOjC,EAAP,KAAasM,EAAb,KAKA,EAA4B9C,qBAA5B,mBAAOmB,EAAP,KAAe6B,EAAf,KACME,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBL,GAAQ,SAACb,GAAD,mBAAC,eACFA,GADC,mBAEHkB,EAAOhJ,KAAOgJ,EAAOjE,YAqB9B,OACI,sBAAM7C,UAAU,OAAhB,SACI,sBAAKA,UAAU,YAAf,UACI,cAAC,GAAD,CAAUlC,KAAK,2IACf,yBAASkC,UAAU,UAAnB,SACI,sBAAKA,UAAU,gBAAf,UACI,yBAASA,UAAU,qBAAnB,SACI,qBACIE,IAAKyU,EAAYxU,KAAOC,EACxBC,IAAI,WAGZ,yBAASL,UAAU,sBAAnB,SACI,uBACI7B,OAAO,MACP6B,UAAU,gBACVkH,SAjCP,SAACC,GAClBA,EAAMC,iBACN,IAAM8B,EAAO,2BAAQ/O,GAAR,IAAc2D,KAAM3D,EAAK2D,KAAM0K,SAAUrO,EAAKqO,WAC3D,IACItJ,EAASI,EAAsB4J,IACjC,MAAOpN,GACL6K,EAAU7K,KAwBM,UAKI,sBAAKkE,UAAU,gBAAf,UACI,mBAAGA,UAAU,sBAAb,0DAGA,cAAC,GAAD,CACIlC,KAAK,OACL+E,MAAO1I,EAAK2D,KACZwH,SAAUuB,EACV/K,MAAOgJ,EACPU,mBAAmB,yFACnBD,eAAe,gDAGvB,sBAAKvF,UAAU,gBAAf,UACI,mBAAGA,UAAU,sBAAb,6EAGA,cAAC,GAAD,CACIlC,KAAK,WACL+E,MAAO1I,EAAKqO,SACZlD,SAAUuB,EACV/K,MAAOgJ,EACPU,mBAAmB,iHACnBD,eAAe,gDAGtBoP,GACG,qBAAK3U,UAAU,gBAAf,SACI,wBACIqF,KAAK,SACLrF,UArDhC,yBACC7F,EAAK2D,KAAK2D,OAAS,EAAI,oCAAsC,IAqD9BxB,QAASrI,EAAQgd,OAHrB,sFCczBC,GA7FK,SAAC,GAAmB,I3CmKVC,E2CnKPxL,EAAgB,EAAhBA,UACbqL,EAAcjV,a3C8HgB,SAACzB,GACrC,GAAIA,EAAMmB,MAAMzD,KACZ,OAAOsC,EAAMmB,MAAM7B,SAAS8B,MACxB,SAACZ,GAAD,OAAOA,EAAErC,MAAQ6B,EAAMmB,MAAMzD,KAAKrD,a2ChIpCyc,EAAarV,a3CiKOoV,E2CjKmBxL,E3CiKN,SAACrL,GACxC,OAAOA,EAAMmB,MAAM7B,SAAS8B,MAAK,SAACZ,GAAD,OAAOA,EAAErC,MAAQ0Y,Q2CjKlD,EAAgCnR,qBAAhC,mBAAOqR,EAAP,KAAiBC,EAAjB,KAEM/V,EAAWwH,cASjB,OARAxC,qBAAU,WACNhF,EAASoN,QACV,IAEHpI,qBAAU,WACN+Q,EAAYF,KACb,CAACJ,EAAaI,IAGb,mCACKC,EACG,sBAAMhV,UAAU,OAAhB,SACI,sBAAKA,UAAU,YAAf,UACI,cAAC,GAAD,CAAUlC,KAAK,mHACf,yBAASkC,UAAU,UAAnB,SACI,sBAAKA,UAAU,gBAAf,UACI,yBAASA,UAAU,qBAAnB,SACI,qBACIE,IACI8U,EAAS7U,IACH6U,EAAS7U,IACTC,EAEVC,IAAI,WAGZ,0BAASL,UAAU,sBAAnB,UACI,sBAAKA,UAAU,gBAAf,UACI,mBAAGA,UAAU,sBAAb,0GAGA,mBAAGA,UAAU,qBAAb,SACKgV,EAASlX,UAGjBkX,EAASxM,SAAS/G,OAAS,GACxB,sBAAKzB,UAAU,gBAAf,UACI,mBAAGA,UAAU,sBAAb,kIAGA,mBAAGA,UAAU,qBAAb,SACKgV,EAASxM,cAKtB,sBAAKxI,UAAU,gBAAf,UACI,mBAAGA,UAAU,sBAAb,iEAGA,mBAAGA,UAAU,qBAAb,SACKgV,EAASvM,kBAGlB,sBAAKzI,UAAU,gBAAf,UACI,mBAAGA,UAAU,sBAAb,oGAGA,mBAAGA,UAAU,qBAAb,SACKgV,EAAStM,mBAGjBqM,EAAW3Y,MAAQuY,EAAYvY,KAC5B,qBAAK4D,UAAU,gBAAf,SACI,cAAC,IAAD,CACIM,GAAE,mBAAcqU,EAAYvY,IAA1B,SACF4D,UAAU,qBAFd,2GAc5B,cAAC,GAAD,OC9DDkV,GAvBC,WACZ,IAAMxb,EAAS6P,uBACPD,EAAoB5P,EAApB4P,UAAW6L,EAASzb,EAATyb,KACb/T,EAAgB1B,a5C6IY,SAACzB,GACnC,GAAIA,EAAMmB,MAAMzD,KACZ,OAAOsC,EAAMmB,MAAMzD,KAAKrD,U4C9I5B,OACI,cAAC,GAAD,UACKgR,EACG6L,EACI7L,IAAclI,EACV,cAAC,GAAD,IAEA,cAAC,YAAD,CAAUd,GAAE,mBAAcc,EAAd,WAGhB,cAAC,GAAD,CAAakI,UAAWA,IAG5B,cAAC,GAAD,OCZD8L,GATC,WACZ,IAAMlW,EAAWwH,cAKjB,OAHAxC,qBAAU,WACNhF,G7C8JqB,SAACA,GAC1BhH,EAAoBgB,iBACpBgG,EAASR,KACT9G,EAAQkK,KAAK,kB6ChKV,IACI,cAAC,GAAD,KCsBIuT,GApBG,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SACXjV,EAAWwH,cACX4O,EAAgB5V,a9C+Ia,SAACzB,GACpC,OAAOA,EAAMmB,MAAM5B,a8C/IbE,EAAagC,a9CiJY,SAACzB,GAChC,OAAOA,EAAMmB,MAAM1B,c8C1InB,OANAwG,qBAAU,WACNhF,G3CKgC,SAACA,EAAUgC,GAC/ChC,EAAS0B,MACT,IAAMQ,EH+H4B,SAACnD,GACnC,GAAIA,EAAMmB,MAAMzD,KACZ,OAAOsC,EAAMmB,MAAMzD,KAAKrD,OGjIN+I,CAAmBH,KACnCqU,EAAqBhU,KAAKC,MAC5B7I,aAAaG,QAAb,2BAAyCsI,KAEzCmU,IACArW,EAASuB,GAAmB8U,IAC5BrW,EAASwB,GAAyB6U,EAAmB9T,a2CZrDvC,G1C2B4B,SAACA,EAAUgC,GAC3ChC,EAASsD,MACT,IAAMpB,EJwG4B,SAACnD,GACnC,GAAIA,EAAMmB,MAAMzD,KACZ,OAAOsC,EAAMmB,MAAMzD,KAAKrD,OI1GN+I,CAAmBH,KACnCsU,EAAiBjU,KAAKC,MACxB7I,aAAaG,QAAb,yBAAuCsI,KAE3C,GAAIoU,EAAgB,CAChBtW,EAAS+C,GAAeuT,IACxB,IAAIzS,EAAS,EACbyS,EAAexS,SAAQ,SAACC,GACpBF,GAAUE,EAAKJ,SAEnB3D,EAASgD,GAAqBa,IAC9B7D,EAASoD,GAAqBY,GAAsBsS,S0CvCpDtW,EtBUwB,uCAAM,WAAOA,EAAUgC,GAAjB,mBAAAjH,EAAA,yDAC1ByT,EAAcxM,IAAWoN,SAAzBZ,WACJJ,GAAWI,GAFmB,wBAG9BxO,EAASyO,MAHqB,kBAKAJ,GAAgB3Q,MALhB,gBAKlBT,EALkB,EAKlBA,QACR+C,EAAS0O,GAAiBzR,IANA,kDAQ1B+C,EAAS2O,GAAsB,EAAD,KARJ,0DAAN,yDsBTxB3O,EAASD,OACV,CAACvB,IACA4X,EAAsB,cAAC,GAAD,IACnBnB,GCuBIsB,GA/BH,WACR,OACI,qBAAKzV,UAAU,UAAf,SACI,eAAC,GAAD,WACI,cAAC,GAAD,IACA,eAAC,UAAD,WACI,cAAC,GAAD,CAAgB0V,KAAK,UAAUxB,UAAWjK,KAC1C,cAAC,SAAD,CAAOyL,KAAK,aAAaxB,UAAWrB,KACpC,cAAC,SAAD,CAAO6C,KAAK,wBAAwBxB,UAAWvB,KAC/C,cAAC,GAAD,CACI+C,KAAK,8BACLxB,UAAWgB,KAEf,cAAC,SAAD,CAAOQ,KAAK,OAAOxB,UAAWtB,KAC9B,cAAC,SAAD,CAAO8C,KAAK,gBAAgBxB,UAAW3L,KACvC,cAAC,SAAD,CAAOmN,KAAK,WAAWxB,UAAWkB,KAClC,cAAC,SAAD,CACIM,KAAK,iBACLC,OAAK,EACLzB,UAAWrY,KAEf,cAAC,SAAD,CAAO6Z,KAAK,IAAIC,OAAK,EAACzB,UAAW0B,KACjC,cAAC,SAAD,CAAOF,KAAK,cAAcxB,UAAWH,KACrC,cAAC,YAAD,CAAUzT,GAAG,YAEjB,cAAC,GAAD,UCpChB,GAIIuV,EAAQ,IAHRC,GADJ,GACIA,gBACAC,GAFJ,GAEIA,eAIEC,IAAuBC,EAN7B,GAGIA,sBAG8C,CAC9CC,mBAAmB,IAGjBC,GAAcL,GAAgB,CAChCxH,SAAUR,GACV1O,MAAOR,EACP6N,SAAUP,GACVnL,WAAYJ,GACZ+C,OAAQnB,KCZZ,IAAM6T,GDgBKL,GAAe,CAClBlX,QAASsX,GACTE,WAAYL,KChBpBM,IAASjC,OACL,cAAC,IAAMkC,WAAP,UACI,cAAC,IAAD,CAAUH,MAAOA,GAAjB,SACI,cAAC,UAAD,CAAQxe,QAASA,EAAjB,SACI,cAAC,GAAD,UAIZgI,SAAS4W,eAAe,W","file":"static/js/main.2f6d7ea2.chunk.js","sourcesContent":["export function generateAuthErrors(message) {\r\n    switch (message) {\r\n        case \"INVALID_PASSWORD\":\r\n            return \"Email или пароль введены некорректно\";\r\n        case \"EMAIL_NOT_FOUND\":\r\n            return \"Email или пароль введены некорректно\";\r\n        case \"EMAIL_EXISTS\":\r\n            return \"Пользователь с таким Email уже существует\";\r\n        default:\r\n            return \"Слишком много попыток входа. Попробуйте позднее\";\r\n    }\r\n}\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;\r\n","const TOKEN_KEY = \"jwt-token\";\r\nconst REFRESH_KEY = \"jwt-refresh-token\";\r\nconst EXPIRES_KEY = \"jwt-expires\";\r\nconst USERID_KEY = \"user-local-id\";\r\n\r\nexport function setTokens({\r\n    refreshToken,\r\n    accessToken,\r\n    userId,\r\n    expiresIn = 3600\r\n}) {\r\n    const expiresDate = new Date().getTime() + expiresIn * 1000;\r\n    localStorage.setItem(USERID_KEY, userId);\r\n    localStorage.setItem(TOKEN_KEY, accessToken);\r\n    localStorage.setItem(REFRESH_KEY, refreshToken);\r\n    localStorage.setItem(EXPIRES_KEY, expiresDate);\r\n}\r\nexport function getAccessToken() {\r\n    return localStorage.getItem(TOKEN_KEY);\r\n}\r\nexport function getRefreshToken() {\r\n    return localStorage.getItem(REFRESH_KEY);\r\n}\r\nexport function removeAuthData() {\r\n    localStorage.removeItem(USERID_KEY);\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    localStorage.removeItem(REFRESH_KEY);\r\n    localStorage.removeItem(EXPIRES_KEY);\r\n}\r\n\r\nexport function getTokenExpiresDate() {\r\n    return localStorage.getItem(EXPIRES_KEY);\r\n}\r\nexport function getUserId() {\r\n    return localStorage.getItem(USERID_KEY);\r\n}\r\n\r\nconst localStorageService = {\r\n    setTokens,\r\n    getAccessToken,\r\n    getRefreshToken,\r\n    getTokenExpiresDate,\r\n    getUserId,\r\n    removeAuthData\r\n};\r\nexport default localStorageService;\r\n","import axios from \"axios\";\r\nimport localStorageService from \"./localStorage.service\";\r\nimport config from \"../config.json\";\r\n\r\nconst httpAuth = axios.create({\r\n    baseURL: config.apiEndpoint + \"auth/\",\r\n    params: {\r\n        key: process.env.REACT_APP_FIREBASE_KEY\r\n    }\r\n});\r\n\r\nconst authService = {\r\n    register: async (payload) => {\r\n        const { data } = await httpAuth.post(`signUp`, payload);\r\n        return data;\r\n    },\r\n    login: async ({ email, password }) => {\r\n        const { data } = await httpAuth.post(`signInWithPassword`, {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        });\r\n        return data;\r\n    },\r\n    refreshToken: async () => {\r\n        const { data } = await httpAuth.post(\"token\", {\r\n            grant_type: \"refresh_token\",\r\n            refresh_token: localStorageService.getRefreshToken()\r\n        });\r\n        return data;\r\n    }\r\n};\r\n\r\nexport default authService;\r\n","import axios from \"axios\";\r\nimport configFile from \"../config.json\";\r\nimport authService from \"./auth.service\";\r\nimport localStorageService from \"./localStorage.service\";\r\n\r\nconst http = axios.create({\r\n    baseURL: configFile.apiEndpoint\r\n});\r\n\r\nhttp.interceptors.request.use(\r\n    async function (config) {\r\n        const expiresDate = localStorageService.getTokenExpiresDate();\r\n        const refreshToken = localStorageService.getRefreshToken();\r\n        const isExpired = refreshToken && expiresDate < Date.now();\r\n        if (configFile.isFireBase) {\r\n            const containSlash = /\\/$/gi.test(config.url);\r\n            config.url =\r\n                (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\r\n            if (isExpired) {\r\n                const data = await authService.refreshToken();\r\n                localStorageService.setTokens({\r\n                    refreshToken: data.refresh_token,\r\n                    idToken: data.id_token,\r\n                    expiresIn: data.expires_in,\r\n                    localId: data.user_id\r\n                });\r\n            }\r\n            const accessToken = localStorageService.getAccessToken();\r\n            if (accessToken) {\r\n                config.params = { ...config.params, auth: accessToken };\r\n            }\r\n        } else {\r\n            if (isExpired) {\r\n                const data = await authService.refreshToken();\r\n                localStorageService.setTokens(data);\r\n            }\r\n            const accessToken = localStorageService.getAccessToken();\r\n            if (accessToken) {\r\n                config.headers = {\r\n                    ...config.headers,\r\n                    Authorization: `Bearer ${accessToken}`\r\n                };\r\n            }\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\nfunction transormData(data) {\r\n    return data && !data._id\r\n        ? Object.keys(data).map((key) => ({\r\n              ...data[key]\r\n          }))\r\n        : data;\r\n}\r\nhttp.interceptors.response.use(\r\n    (res) => {\r\n        if (configFile.isFireBase) {\r\n            res.data = { content: transormData(res.data) };\r\n        } else {\r\n            res.data = { content: res.data };\r\n        }\r\n        return res;\r\n    },\r\n    function (error) {\r\n        const expectedErrors =\r\n            error.response &&\r\n            error.response.status >= 400 &&\r\n            error.response.status < 500;\r\n\r\n        if (!expectedErrors) {\r\n            console.log(\"Somthing was wrong. Try it later\");\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\nconst httpService = {\r\n    get: http.get,\r\n    post: http.post,\r\n    put: http.put,\r\n    delete: http.delete,\r\n    patch: http.patch\r\n};\r\nexport default httpService;\r\n","import httpService from \"./http.service\";\r\nimport localStorageService from \"./localStorage.service\";\r\n\r\nconst userEndpoint = \"users/\";\r\n\r\nconst userService = {\r\n    get: async () => {\r\n        const { data } = await httpService.get(userEndpoint);\r\n        return data;\r\n    },\r\n    create: async (payload) => {\r\n        const { data } = await httpService.put(\r\n            userEndpoint + payload._id,\r\n            payload\r\n        );\r\n        return data;\r\n    },\r\n    getCurrentUser: async () => {\r\n        const { data } = await httpService.get(\r\n            userEndpoint + localStorageService.getUserId()\r\n        );\r\n        return data;\r\n    },\r\n    getParamsUser: async (id) => {\r\n        const { data } = await httpService.get(userEndpoint + id);\r\n        return data;\r\n    },\r\n    update: async (payload) => {\r\n        const { data } = await httpService.patch(\r\n            userEndpoint + localStorageService.getUserId(),\r\n            payload\r\n        );\r\n        return data;\r\n    }\r\n};\r\nexport default userService;\r\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\r\nimport { generateAuthErrors } from \"../../utils/generateAuthErrors\";\r\nimport history from \"../../utils/history\";\r\nimport authService from \"../services/auth.service\";\r\nimport localStorageService from \"../services/localStorage.service\";\r\nimport userService from \"../services/user.service\";\r\n\r\nconst initialState = localStorageService.getAccessToken()\r\n    ? {\r\n          entities: null,\r\n          isLoading: true,\r\n          error: null,\r\n          auth: { userId: localStorageService.getUserId() },\r\n          paramsUserData: null,\r\n          isLoggedIn: true,\r\n          dataLoaded: false\r\n      }\r\n    : {\r\n          entities: null,\r\n          isLoading: false,\r\n          error: null,\r\n          auth: null,\r\n          paramsUserData: null,\r\n          isLoggedIn: false,\r\n          dataLoaded: false\r\n      };\r\n\r\nconst usersSlice = createSlice({\r\n    name: \"users\",\r\n    initialState,\r\n    reducers: {\r\n        usersRequested: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        usersReceived: (state, action) => {\r\n            state.entities = action.payload;\r\n            state.isLoading = false;\r\n            state.dataLoaded = true;\r\n        },\r\n        usersReceivedFailed: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        usersRequestedSuccess: (state, action) => {\r\n            state.auth = action.payload;\r\n            state.isLoggedIn = true;\r\n        },\r\n        usersRequestedFailed: (state, action) => {\r\n            state.error = action.payload;\r\n        },\r\n        usersUpdated: (state, action) => {\r\n            const res = state.entities.findIndex((u) => {\r\n                return u._id === action.payload._id;\r\n            });\r\n            state.entities[res] = action.payload;\r\n        },\r\n        userSignOut: (state) => {\r\n            state.auth = null;\r\n            state.isLoggedIn = false;\r\n            state.dataLoaded = false;\r\n        },\r\n        authRequested: (state) => {\r\n            state.error = null;\r\n        }\r\n    }\r\n});\r\n\r\nconst { reducer: usersReducer, actions } = usersSlice;\r\nconst {\r\n    usersRequested,\r\n    usersReceived,\r\n    usersReceivedFailed,\r\n    usersRequestedSuccess,\r\n    usersRequestedFailed,\r\n    usersUpdated,\r\n    userSignOut\r\n} = actions;\r\n\r\nconst authRequested = createAction(\"users/authRequested\");\r\nconst userUpdateRequested = createAction(\"users/userUpdateRequested\");\r\n\r\nexport const signIn =\r\n    ({ payload, redirect }) =>\r\n    async (dispatch) => {\r\n        const { email, password } = payload;\r\n        dispatch(authRequested());\r\n        try {\r\n            const data = await authService.login({ email, password });\r\n            localStorageService.setTokens(data);\r\n            dispatch(usersRequestedSuccess({ userId: data.userId }));\r\n            history.push(redirect);\r\n        } catch (error) {\r\n            const { code, message } = error.response.data.error;\r\n            if (code === 400) {\r\n                const errorMessage = generateAuthErrors(message);\r\n                dispatch(usersRequestedFailed(errorMessage));\r\n            } else {\r\n                dispatch(usersRequestedFailed(error));\r\n            }\r\n        }\r\n    };\r\n\r\nexport const signUp = (payload) => async (dispatch) => {\r\n    dispatch(authRequested());\r\n    try {\r\n        const data = await authService.register(payload);\r\n        localStorageService.setTokens(data);\r\n        dispatch(usersRequestedSuccess({ userId: data.userId }));\r\n        history.push(\"/products\");\r\n    } catch (error) {\r\n        const { code, message } = error.response.data.error;\r\n        if (code === 400) {\r\n            const errorMessage = generateAuthErrors(message);\r\n            dispatch(usersRequestedFailed(errorMessage));\r\n        } else {\r\n            dispatch(usersRequestedFailed(error));\r\n        }\r\n    }\r\n};\r\n\r\nexport const loadUsersList = () => async (dispatch) => {\r\n    dispatch(usersRequested());\r\n    try {\r\n        const { content } = await userService.get();\r\n        dispatch(usersReceived(content));\r\n    } catch (error) {\r\n        dispatch(usersReceivedFailed(error));\r\n    }\r\n};\r\n\r\nexport const getUsers = () => (state) => state.users.entities;\r\nexport const getUsersLoadingStatus = () => (state) => state.users.isLoading;\r\nexport const getUserById = (userId) => (state) => {\r\n    if (state.users.entities) {\r\n        return state.users.entities.find((u) => u._id === userId);\r\n    }\r\n};\r\nexport const getCurrentUserData = () => (state) => {\r\n    if (state.users.auth) {\r\n        return state.users.entities.find(\r\n            (u) => u._id === state.users.auth.userId\r\n        );\r\n    }\r\n};\r\nexport const updateCurrentUserData = (payload) => async (dispatch) => {\r\n    dispatch(userUpdateRequested());\r\n    try {\r\n        const contentInner = await userService.update(payload);\r\n        dispatch(usersUpdated(contentInner.content));\r\n    } catch (error) {\r\n        dispatch(usersRequestedFailed());\r\n    }\r\n};\r\nexport const getCurrentUserId = () => (state) => {\r\n    if (state.users.auth) {\r\n        return state.users.auth.userId;\r\n    }\r\n};\r\nexport const getUsersIsLoading = () => (state) => {\r\n    return state.users.isLoading;\r\n};\r\nexport const getIsLoggedIn = () => (state) => {\r\n    return state.users.isLoggedIn;\r\n};\r\nexport const getDataLoaded = () => (state) => {\r\n    return state.users.dataLoaded;\r\n};\r\nexport const signOut = () => (dispatch) => {\r\n    localStorageService.removeAuthData();\r\n    dispatch(userSignOut());\r\n    history.push(\"/products\");\r\n};\r\n\r\nexport const getParamsUser = (paramsId) => (state) => {\r\n    return state.users.entities.find((u) => u._id === paramsId);\r\n};\r\nexport const getAuthError = () => (state) => {\r\n    return state.users.error;\r\n};\r\nexport default usersReducer;\r\n","export default __webpack_public_path__ + \"static/media/default-user.6d5d8a5a.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUserById } from \"../../store/users\";\r\nimport userDefaultImage from \"./images/default-user.png\";\r\n\r\nconst ProfileDropdown = ({ userId }) => {\r\n    const userById = useSelector(getUserById(userId));\r\n    const toggleDropdown = () => {\r\n        const dropdownList = document.querySelector(\".dropdown__list\");\r\n        dropdownList.classList.toggle(\"dropdown__list-active\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {userById && (\r\n                <div className=\"dropdown\">\r\n                    <h2 className=\"dropdown__title\" onClick={toggleDropdown}>\r\n                        <img\r\n                            src={userById.img ? userById.img : userDefaultImage}\r\n                            alt=\"user\"\r\n                        />\r\n                        <span>{userById ? userById.name : \"АНОНИМ !!!\"}</span>\r\n                    </h2>\r\n                    <div className=\"dropdown__list\" onClick={toggleDropdown}>\r\n                        <Link\r\n                            to={`/profile/${userId}`}\r\n                            className=\"dropdown__list-link\"\r\n                        >\r\n                            Профиль\r\n                        </Link>\r\n                        <Link to={\"/signout\"} className=\"dropdown__list-link\">\r\n                            Выйти\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\nProfileDropdown.propTypes = {\r\n    userId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ProfileDropdown;\r\n","import { createSlice, createAction } from \"@reduxjs/toolkit\";\r\nimport { getCurrentUserId } from \"./users\";\r\n\r\nconst favouritesSlice = createSlice({\r\n    name: \"favourites\",\r\n    initialState: {\r\n        entities: null,\r\n        entitiesAmount: 0\r\n    },\r\n    reducers: {\r\n        favouritesReceived: (state, action) => {\r\n            state.entities = action.payload;\r\n        },\r\n        favouritesReceivedLength: (state, action) => {\r\n            state.entitiesAmount = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nconst { reducer: favouritesReducer, actions } = favouritesSlice;\r\nconst { favouritesReceived, favouritesReceivedLength } = actions;\r\n\r\nconst favouritesRequested = createAction(\"favourites/favouritesRequested\");\r\n\r\nexport const loadFavouritesList = () => (dispatch, getState) => {\r\n    dispatch(favouritesRequested());\r\n    const currentUserId = getCurrentUserId()(getState());\r\n    const favouritesProducts = JSON.parse(\r\n        localStorage.getItem(`productsFavorite-${currentUserId}`)\r\n    );\r\n    if (favouritesProducts) {\r\n        dispatch(favouritesReceived(favouritesProducts));\r\n        dispatch(favouritesReceivedLength(favouritesProducts.length));\r\n    }\r\n};\r\n\r\nexport const getFavourites = () => (state) => state.favourites.entities;\r\nexport const getFavouritesAmount = () => (state) =>\r\n    state.favourites.entitiesAmount;\r\nexport const getFavouritesById = (productId) => (state) => {\r\n    if (state.favourites.entities) {\r\n        return state.favourites.entities.find((u) => u._id === productId);\r\n    }\r\n};\r\n\r\nexport const toggleFavourite = (product) => (dispatch, getState) => {\r\n    const currentUserId = getCurrentUserId()(getState());\r\n    let currentUserFavourites = JSON.parse(\r\n        localStorage.getItem(`productsFavorite-${currentUserId}`)\r\n    );\r\n    let indexOfFindedProduct;\r\n    if (currentUserFavourites === null) {\r\n        currentUserFavourites = [];\r\n    } else if (currentUserFavourites.length > 0) {\r\n        indexOfFindedProduct = currentUserFavourites.findIndex(\r\n            (p) => p._id === product._id\r\n        );\r\n    }\r\n\r\n    if (indexOfFindedProduct >= 0) {\r\n        const newFavouriteProductsArray = currentUserFavourites.filter(\r\n            (p) => p._id !== product._id\r\n        );\r\n        localStorage.setItem(\r\n            `productsFavorite-${currentUserId}`,\r\n            JSON.stringify(newFavouriteProductsArray)\r\n        );\r\n        dispatch(favouritesReceived(newFavouriteProductsArray));\r\n        dispatch(favouritesReceivedLength(newFavouriteProductsArray.length));\r\n    } else {\r\n        currentUserFavourites.push(product);\r\n        localStorage.setItem(\r\n            `productsFavorite-${currentUserId}`,\r\n            JSON.stringify(currentUserFavourites)\r\n        );\r\n        dispatch(favouritesReceived(currentUserFavourites));\r\n        dispatch(favouritesReceivedLength(currentUserFavourites.length));\r\n    }\r\n};\r\n\r\nexport default favouritesReducer;\r\n","import { createSlice, createAction } from \"@reduxjs/toolkit\";\r\nimport { getCurrentUserId } from \"./users\";\r\n\r\nconst basketSlice = createSlice({\r\n    name: \"basket\",\r\n    initialState: {\r\n        entities: null,\r\n        entitiesAmount: 0,\r\n        totalSumOfOrder: 0\r\n    },\r\n    reducers: {\r\n        basketReceived: (state, action) => {\r\n            state.entities = action.payload;\r\n        },\r\n        basketReceivedLength: (state, action) => {\r\n            state.entitiesAmount = action.payload;\r\n        },\r\n        basketReceivedLengthLess: (state, action) => {\r\n            state.entitiesAmount -= action.payload;\r\n        },\r\n        basketClean: (state) => {\r\n            state.entities = null;\r\n            state.entitiesAmount = 0;\r\n        },\r\n        basketDeleteProductById: (state, action) => {\r\n            state.entities = state.entities.filter(\r\n                (p) => p._id !== action.payload._id\r\n            );\r\n        },\r\n        basketChangeTotalSum: (state, action) => {\r\n            state.totalSumOfOrder = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nconst { reducer: basketReducer, actions } = basketSlice;\r\nconst {\r\n    basketReceived,\r\n    basketReceivedLength,\r\n    basketReceivedLengthLess,\r\n    basketClean,\r\n    basketDeleteProductById,\r\n    basketChangeTotalSum\r\n} = actions;\r\n\r\nconst basketRequested = createAction(\"basket/basketRequested\");\r\n\r\nexport const loadBasketList = () => (dispatch, getState) => {\r\n    dispatch(basketRequested());\r\n    const currentUserId = getCurrentUserId()(getState());\r\n    const basketProducts = JSON.parse(\r\n        localStorage.getItem(`productsBasket-${currentUserId}`)\r\n    );\r\n    if (basketProducts) {\r\n        dispatch(basketReceived(basketProducts));\r\n        let result = 0;\r\n        basketProducts.forEach((elem) => {\r\n            result += elem.value;\r\n        });\r\n        dispatch(basketReceivedLength(result));\r\n        dispatch(basketChangeTotalSum(changeTotalSumOfOrder(basketProducts)));\r\n    }\r\n};\r\n\r\nexport const getBasket = () => (state) => state.basket.entities;\r\nexport const getBasketAmount = () => (state) => state.basket.entitiesAmount;\r\n\r\nexport const clearBasketList = () => (dispatch, getState) => {\r\n    const currentUserId = getCurrentUserId()(getState());\r\n    localStorage.removeItem(`productsBasket-${currentUserId}`);\r\n    dispatch(basketClean());\r\n    dispatch(basketChangeTotalSum(0));\r\n};\r\nexport const changeProductsToBasketList =\r\n    (product, amount = 1, minus) =>\r\n    (dispatch, getState) => {\r\n        const currentUserId = getCurrentUserId()(getState());\r\n\r\n        let currentUserBasket = JSON.parse(\r\n            localStorage.getItem(`productsBasket-${currentUserId}`)\r\n        );\r\n        let indexOfFindedProduct;\r\n        if (currentUserBasket === null) {\r\n            currentUserBasket = [];\r\n        } else if (currentUserBasket.length > 0) {\r\n            indexOfFindedProduct = currentUserBasket.findIndex(\r\n                (p) => p._id === product._id\r\n            );\r\n        }\r\n\r\n        if (indexOfFindedProduct >= 0) {\r\n            if (minus) {\r\n                currentUserBasket[indexOfFindedProduct].value -= amount;\r\n                if (currentUserBasket[indexOfFindedProduct].value <= 0) {\r\n                    currentUserBasket.splice(\r\n                        currentUserBasket[indexOfFindedProduct],\r\n                        1\r\n                    );\r\n                }\r\n            } else {\r\n                currentUserBasket[indexOfFindedProduct].value += amount;\r\n            }\r\n            localStorage.setItem(\r\n                `productsBasket-${currentUserId}`,\r\n                JSON.stringify(currentUserBasket)\r\n            );\r\n            dispatch(basketReceived(currentUserBasket));\r\n            dispatch(basketReceivedLength(currentUserBasket.length));\r\n        } else {\r\n            currentUserBasket.push(product);\r\n            localStorage.setItem(\r\n                `productsBasket-${currentUserId}`,\r\n                JSON.stringify(currentUserBasket)\r\n            );\r\n            dispatch(basketReceived(currentUserBasket));\r\n        }\r\n        let result = 0;\r\n        currentUserBasket.forEach((elem) => {\r\n            result += elem.value;\r\n        });\r\n        dispatch(basketReceivedLength(result));\r\n        dispatch(\r\n            basketChangeTotalSum(changeTotalSumOfOrder(currentUserBasket))\r\n        );\r\n    };\r\n\r\nexport const deleteBasketProductById = (product) => (dispatch, getState) => {\r\n    const currentUserId = getCurrentUserId()(getState());\r\n    const currentUserBasket = JSON.parse(\r\n        localStorage.getItem(`productsBasket-${currentUserId}`)\r\n    );\r\n    const newCurrentUserBasket = currentUserBasket.filter(\r\n        (p) => p._id !== product._id\r\n    );\r\n    localStorage.setItem(\r\n        `productsBasket-${currentUserId}`,\r\n        JSON.stringify(newCurrentUserBasket)\r\n    );\r\n    dispatch(basketDeleteProductById(product));\r\n    dispatch(basketReceivedLengthLess(product.value));\r\n    dispatch(basketChangeTotalSum(changeTotalSumOfOrder(newCurrentUserBasket)));\r\n};\r\n\r\nfunction changeTotalSumOfOrder(arr) {\r\n    let totalSum = 0;\r\n    arr &&\r\n        arr.forEach((element) => {\r\n            totalSum += element.price * element.value;\r\n        });\r\n    return totalSum;\r\n}\r\nexport const getTotalSumOfOrder = () => (state) => state.basket.totalSumOfOrder;\r\n\r\nexport default basketReducer;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { resizePage } from \"../../../utils/resizePage\";\r\nimport ProfileDropdown from \"./profile_dropdown\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCurrentUserId } from \"../../store/users\";\r\nimport { getFavouritesAmount } from \"../../store/favourite\";\r\nimport { getBasketAmount } from \"../../store/basket\";\r\n\r\nconst Header = () => {\r\n    const foundFavoriteProductsAmount = useSelector(getFavouritesAmount());\r\n    const foundBasketProductsAmount = useSelector(getBasketAmount());\r\n    const currentUserId = useSelector(getCurrentUserId());\r\n    const [width] = resizePage();\r\n\r\n    // Menu burger =======================================================================\r\n    const headerBurger = document.querySelector(\".header__burger\");\r\n    const headerMenu = document.querySelector(\".header__menu\");\r\n    const body = document.querySelector(\"body\");\r\n    const toggleBurger = () => {\r\n        if (headerBurger) {\r\n            headerBurger.classList.toggle(\"active\");\r\n            headerMenu.classList.toggle(\"active\");\r\n            body.classList.toggle(\"lock\");\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (width >= 768 && headerBurger && headerMenu) {\r\n            headerBurger.classList.remove(\"active\");\r\n            headerMenu.classList.remove(\"active\");\r\n            body.classList.remove(\"lock\");\r\n        }\r\n    }, [width]);\r\n    // =======================================================================\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"header__body\">\r\n                    <div className=\"header__logo\">LOGO</div>\r\n                    <div className=\"header__burger\" onClick={toggleBurger}>\r\n                        <span></span>\r\n                    </div>\r\n                    <nav className=\"header__menu\">\r\n                        <ul className=\"header__list\">\r\n                            <li onClick={toggleBurger}>\r\n                                <Link to=\"/products\" className=\"header__link\">\r\n                                    Продукты\r\n                                </Link>\r\n                            </li>\r\n                            {currentUserId && (\r\n                                <li onClick={toggleBurger}>\r\n                                    <Link\r\n                                        to=\"/favorites\"\r\n                                        className=\"header__link\"\r\n                                    >\r\n                                        Избранное\r\n                                    </Link>\r\n                                    {foundFavoriteProductsAmount > 0 && (\r\n                                        <span className=\"header__count-favorites\">\r\n                                            {foundFavoriteProductsAmount}\r\n                                        </span>\r\n                                    )}\r\n                                </li>\r\n                            )}\r\n                            {currentUserId && (\r\n                                <li onClick={toggleBurger}>\r\n                                    <Link to=\"/basket\" className=\"header__link\">\r\n                                        Корзина\r\n                                    </Link>\r\n                                    {foundBasketProductsAmount > 0 && (\r\n                                        <span className=\"header__count-basket\">\r\n                                            {foundBasketProductsAmount}\r\n                                        </span>\r\n                                    )}\r\n                                </li>\r\n                            )}\r\n                            {currentUserId ? (\r\n                                <li onClick={toggleBurger}>\r\n                                    <div>\r\n                                        <ProfileDropdown\r\n                                            userId={currentUserId}\r\n                                        />\r\n                                    </div>\r\n                                </li>\r\n                            ) : (\r\n                                <li onClick={toggleBurger}>\r\n                                    <Link\r\n                                        to=\"/authorization\"\r\n                                        className=\"header__button\"\r\n                                    >\r\n                                        Вход\r\n                                    </Link>\r\n                                </li>\r\n                            )}\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const resizePage = () => {\r\n    const [size, setSize] = useState([\r\n        document.documentElement.clientWidth,\r\n        document.documentElement.clientHeight\r\n    ]);\r\n\r\n    const handleResize = () => {\r\n        setSize([\r\n            document.documentElement.clientWidth,\r\n            document.documentElement.clientHeight\r\n        ]);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", handleResize);\r\n\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, [size]);\r\n\r\n    return size;\r\n};\r\n","export function validator(data, config) {\r\n    const errors = {};\r\n    function validate(validateMethod, data, config) {\r\n        let statusValidate;\r\n        switch (validateMethod) {\r\n            case \"isRequired\":\r\n                statusValidate = data.trim() === \"\";\r\n                break;\r\n            case \"isEmail\": {\r\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\r\n                statusValidate = !emailRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"isCapitalSymbol\": {\r\n                const capitalRegExp = /[A-Z]+/g;\r\n                statusValidate = !capitalRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"isContainDigit\": {\r\n                const digitRegExp = /\\d+/g;\r\n                statusValidate = !digitRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"minValue\": {\r\n                statusValidate = data.length < config.value;\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        if (statusValidate) return config.message;\r\n    }\r\n    for (const fieldName in data) {\r\n        for (const validateMethod in config[fieldName]) {\r\n            const error = validate(\r\n                validateMethod,\r\n                data[fieldName],\r\n                config[fieldName][validateMethod]\r\n            );\r\n            if (error && !errors[fieldName]) {\r\n                errors[fieldName] = error;\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Inputs = ({\r\n    type,\r\n    onChange,\r\n    value,\r\n    error,\r\n    classNameInput,\r\n    messagePlaceholder,\r\n    name\r\n}) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const toggleShowPassword = () => {\r\n        setShowPassword((prevState) => !prevState);\r\n    };\r\n\r\n    return (\r\n        <article>\r\n            <input\r\n                type={showPassword ? \"text\" : type}\r\n                name={name}\r\n                className={classNameInput}\r\n                placeholder={messagePlaceholder}\r\n                onChange={onChange}\r\n                value={value}\r\n            />\r\n            {error && <p>{error[name]}</p>}\r\n            {type === \"password\" && (\r\n                <svg\r\n                    className={\r\n                        \"authorization__password-eye\" +\r\n                        (showPassword\r\n                            ? \" authorization__password-eye-open\"\r\n                            : \"\")\r\n                    }\r\n                    onClick={toggleShowPassword}\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M21.257 10.962C21.731 11.582 21.731 12.419 21.257 13.038C19.764 14.987 16.182 19 12 19C7.81801 19 4.23601 14.987 2.74301 13.038C2.51239 12.7411 2.38721 12.3759 2.38721 12C2.38721 11.6241 2.51239 11.2589 2.74301 10.962C4.23601 9.013 7.81801 5 12 5C16.182 5 19.764 9.013 21.257 10.962V10.962Z\"\r\n                        stroke=\"black\"\r\n                        strokeWidth=\"1.3\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                    />\r\n                    <path\r\n                        d=\"M12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15Z\"\r\n                        stroke=\"black\"\r\n                        strokeWidth=\"1.3\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                    />\r\n                </svg>\r\n            )}\r\n        </article>\r\n    );\r\n};\r\nInputs.defaultProps = {\r\n    type: \"text\"\r\n};\r\nInputs.propTypes = {\r\n    type: PropTypes.string,\r\n    name: PropTypes.string,\r\n    messagePlaceholder: PropTypes.string,\r\n    classNameInput: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.string,\r\n    error: PropTypes.object\r\n};\r\n\r\nexport default Inputs;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { validator } from \"../../../utils/validator\";\r\nimport { getAuthError, getCurrentUserId, signIn } from \"../../store/users\";\r\nimport Inputs from \"./inputs\";\r\n\r\nconst Authorization = () => {\r\n    const history = useHistory();\r\n    const [data, setData] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        rememberMe: true\r\n    });\r\n    const dispatch = useDispatch();\r\n    const currentUserId = useSelector(getCurrentUserId());\r\n    const [errors, setErrors] = useState();\r\n    const signInError = useSelector(getAuthError());\r\n    const handleChange = ({ target }) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const handleChangeBoolean = () => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            rememberMe: !data.rememberMe\r\n        }));\r\n    };\r\n\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            }\r\n        },\r\n        password: {\r\n            isRequired: {\r\n                message: \"Пароль обязателен для заполнения\"\r\n            }\r\n        }\r\n    };\r\n\r\n    let isValidValue = false;\r\n    if (errors && Object.keys(errors).length === 0) {\r\n        isValidValue = true;\r\n    }\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    /* eslint no-unreachable-loop: [\"error\", { \"ignore\": [\"ForInStatement\", \"ForOfStatement\"] }] */\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        const redirect = history.location.state\r\n            ? history.location.state.from\r\n            : \"/products\";\r\n\r\n        dispatch(signIn({ payload: data, redirect }));\r\n    };\r\n\r\n    const getSubmittClasses = () => {\r\n        return (\r\n            \"authorization__submit\" +\r\n            (!isValidValue || signInError\r\n                ? \" authorization__submit\" + \"-not-active\"\r\n                : \"\")\r\n        );\r\n    };\r\n\r\n    // Переброс на главную страницу, если пользователь авторизован и хочет зайти на авторизацию\r\n    if (currentUserId) {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <main className=\"shop authorization\">\r\n            <div className=\"container\">\r\n                <section className=\"authorization__body\">\r\n                    <h2 className=\"authorization__title title\">Авторизация</h2>\r\n                    <form\r\n                        action=\"#\"\r\n                        className=\"authorization__form\"\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        <Inputs\r\n                            name=\"email\"\r\n                            value={data.email}\r\n                            onChange={handleChange}\r\n                            error={errors}\r\n                            messagePlaceholder=\"Email\"\r\n                            classNameInput=\"authorization__email\"\r\n                        />\r\n                        <Inputs\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={data.password}\r\n                            onChange={handleChange}\r\n                            error={errors}\r\n                            messagePlaceholder=\"Password\"\r\n                            classNameInput=\"authorization__password\"\r\n                        />\r\n\r\n                        <label htmlFor=\"rememberMe\">\r\n                            <input\r\n                                name=\"rememberMe\"\r\n                                type=\"checkbox\"\r\n                                id=\"rememberMe\"\r\n                                value=\"\"\r\n                                checked={data.rememberMe}\r\n                                onChange={handleChangeBoolean}\r\n                                className=\"authorization__form-checkbox-real\"\r\n                            />\r\n                            <span className=\"authorization__form-checkbox-fake\">\r\n                                <svg\r\n                                    width=\"15\"\r\n                                    height=\"13\"\r\n                                    viewBox=\"0 0 15 13\"\r\n                                    fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                >\r\n                                    <path\r\n                                        d=\"M14 1L4 11.01L1 8.01\"\r\n                                        stroke=\"white\"\r\n                                        strokeWidth=\"2\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                </svg>\r\n                            </span>\r\n                            <span className=\"authorization__form-checkbox-text\">\r\n                                Запомнить меня\r\n                            </span>\r\n                        </label>\r\n                        {signInError && (\r\n                            <p className=\"authorization__error\">\r\n                                {signInError}\r\n                            </p>\r\n                        )}\r\n                        <button type=\"submit\" className={getSubmittClasses()}>\r\n                            Войти\r\n                        </button>\r\n                    </form>\r\n                    <Link\r\n                        to=\"/registration\"\r\n                        className=\"authorization__registration hover\"\r\n                    >\r\n                        Зарегистрироваться\r\n                    </Link>\r\n                    <Link\r\n                        to=\"/registration\"\r\n                        className=\"authorization__registration hover\"\r\n                    >\r\n                        Забыли пароль?\r\n                    </Link>\r\n                </section>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Authorization;\r\n","export function displayDate(data) {\r\n    const date = new Date(data);\r\n    const dateNow = new Date();\r\n    const yearDif = dateNow.getFullYear() - date.getFullYear();\r\n    if (yearDif === 0) {\r\n        const dayDif = dateNow.getDay() - date.getDay();\r\n        if (dayDif === 0) {\r\n            const hourDif = dateNow.getHours() - date.getHours();\r\n            if (hourDif === 0) {\r\n                const minutesDif = dateNow.getMinutes() - date.getMinutes();\r\n                if (minutesDif >= 0 && minutesDif < 5) return \"1 минуту назад\";\r\n                if (minutesDif >= 5 && minutesDif < 10) return \"5 минут назад\";\r\n                if (minutesDif >= 10 && minutesDif < 30) {\r\n                    return \"10 минут назад\";\r\n                }\r\n                return \"30 минут назад\";\r\n            }\r\n            return `${date.getHours()}:${date.getMinutes()}`;\r\n        }\r\n        if (date.getDate() < 10 && date.getMonth() >= 9) {\r\n            return `0${date.getDate()}.${\r\n                date.getMonth() + 1\r\n            }.${date.getFullYear()}`;\r\n        } else if (date.getDate() >= 10 && date.getMonth() < 9) {\r\n            return `${date.getDate()}.0${\r\n                date.getMonth() + 1\r\n            }.${date.getFullYear()}`;\r\n        }\r\n        if (date.getDate() < 10 && date.getMonth() < 9) {\r\n            return `0${date.getDate()}.0${\r\n                date.getMonth() + 1\r\n            }.${date.getFullYear()}`;\r\n        } else {\r\n            return `${date.getDate()}.${\r\n                date.getMonth() + 1\r\n            }.${date.getFullYear()}`;\r\n        }\r\n    }\r\n    return (\r\n        date.getFullYear() + \".\" + (date.getMonth() + 1) + \".\" + date.getDate()\r\n    );\r\n}\r\n\r\nexport function registerDate(data) {\r\n    const date = new Date(parseInt(data));\r\n\r\n    if (date.getDate() < 10 && date.getMonth() >= 9) {\r\n        return `0${date.getDate()}.${date.getMonth()}.${date.getFullYear()}`;\r\n    } else if (date.getDate() >= 10 && date.getMonth() < 9) {\r\n        return `${date.getDate()}.0${date.getMonth()}.${date.getFullYear()}`;\r\n    }\r\n    if (date.getDate() < 10 && date.getMonth() < 9) {\r\n        return `0${date.getDate()}.0${date.getMonth()}.${date.getFullYear()}`;\r\n    } else {\r\n        return `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}`;\r\n    }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { registerDate } from \"../../../utils/displayDate\";\r\nimport { validator } from \"../../../utils/validator\";\r\nimport { getAuthError, getCurrentUserId, signUp } from \"../../store/users\";\r\nimport Inputs from \"./inputs\";\r\n\r\nconst Registration = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        registerDate: \"\",\r\n        img: \"\",\r\n        amountReviews: 0\r\n    });\r\n    const [errors, setErrors] = useState();\r\n\r\n    const handleChange = ({ target }) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const currentUserId = useSelector(getCurrentUserId());\r\n    const signInError = useSelector(getAuthError());\r\n\r\n    const validatorConfig = {\r\n        name: {\r\n            isRequired: {\r\n                message: \"Имя обязательно для заполнения\"\r\n            },\r\n            minValue: {\r\n                message: \"Имя должно содержать не меньше 3 букв\",\r\n                value: 3\r\n            }\r\n        },\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: {\r\n                message: \"Электронная почта введена некорректно\"\r\n            }\r\n        },\r\n        password: {\r\n            isRequired: {\r\n                message: \"Пароль обязателен для заполнения\"\r\n            },\r\n            isCapitalSymbol: {\r\n                message:\r\n                    \"Пароль должен содержать как минимум одну заглавную букву\"\r\n            },\r\n            isContainDigit: {\r\n                message: \"Пароль должен содержать как минимум одно число\"\r\n            },\r\n            minValue: {\r\n                message: \"Пароль должен содержать как минимум 8 знаков\",\r\n                value: 8\r\n            }\r\n        }\r\n    };\r\n\r\n    let isValidValue = false;\r\n    if (errors && Object.keys(errors).length === 0) {\r\n        isValidValue = true;\r\n    }\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    /* eslint no-unreachable-loop: [\"error\", { \"ignore\": [\"ForInStatement\", \"ForOfStatement\"] }] */\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        const nowDate = Date.now();\r\n        const regDate = registerDate(parseInt(nowDate));\r\n        const newData = {\r\n            ...data,\r\n            email: data.email,\r\n            password: data.password,\r\n            registerDate: regDate\r\n        };\r\n        dispatch(signUp(newData));\r\n    };\r\n\r\n    const getSubmittClasses = () => {\r\n        return (\r\n            \"authorization__submit\" +\r\n            (!isValidValue ? \" authorization__submit\" + \"-not-active\" : \"\")\r\n        );\r\n    };\r\n\r\n    // Переброс на главную страницу, если пользователь авторизован и хочет зайти на регистрацию\r\n    if (currentUserId) {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <main className=\"shop authorization\">\r\n            <div className=\"container\">\r\n                <section className=\"authorization__body\">\r\n                    <h2 className=\"authorization__title title\">Регистрация</h2>\r\n                    <form\r\n                        action=\"#\"\r\n                        className=\"authorization__form\"\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        <Inputs\r\n                            name=\"name\"\r\n                            value={data.name}\r\n                            onChange={handleChange}\r\n                            error={errors}\r\n                            messagePlaceholder=\"Имя\"\r\n                            classNameInput=\"authorization__email\"\r\n                        />\r\n                        <Inputs\r\n                            name=\"lastName\"\r\n                            value={data.lastName}\r\n                            onChange={handleChange}\r\n                            error={errors}\r\n                            messagePlaceholder=\"Фамилия\"\r\n                            classNameInput=\"authorization__email\"\r\n                        />\r\n                        <Inputs\r\n                            name=\"email\"\r\n                            value={data.email}\r\n                            onChange={handleChange}\r\n                            error={errors}\r\n                            messagePlaceholder=\"Email\"\r\n                            classNameInput=\"authorization__email\"\r\n                        />\r\n                        <Inputs\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={data.password}\r\n                            onChange={handleChange}\r\n                            error={errors}\r\n                            messagePlaceholder=\"Password\"\r\n                            classNameInput=\"authorization__password\"\r\n                        />\r\n                        {signInError && (\r\n                            <p className=\"authorization__error\">\r\n                                {signInError}\r\n                            </p>\r\n                        )}\r\n                        <button className={getSubmittClasses()}>\r\n                            Зарегистрироваться\r\n                        </button>\r\n                    </form>\r\n                    <Link\r\n                        to=\"/authorization\"\r\n                        className=\"authorization__registration hover\"\r\n                    >\r\n                        Войти\r\n                    </Link>\r\n                </section>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Registration;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    const newDate = new Date();\r\n    const currentYear = newDate.getFullYear();\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"footer__content container\">\r\n                2021 - {currentYear}. Все права защищены\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BackLink = ({ name }) => {\r\n    const params = useParams();\r\n    const { profileId } = params;\r\n\r\n    const routeLinkBack =\r\n        name === \"Вернуться к покупкам\" ? \"/products\" : `/profile/${profileId}`;\r\n\r\n    return (\r\n        <div className=\"back\">\r\n            <Link to={routeLinkBack} className=\"hover back-link\">\r\n                <svg\r\n                    width=\"19\"\r\n                    height=\"12\"\r\n                    viewBox=\"0 0 19 12\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M17 2V5H3.82998L6.70998 2.12C7.09998 1.73 7.09998 1.1 6.70998 0.709996C6.31998 0.319996 5.68998 0.319996 5.29998 0.709996L0.70998 5.3C0.31998 5.69 0.31998 6.32 0.70998 6.71L5.29998 11.3C5.68998 11.69 6.31998 11.69 6.70998 11.3C7.09998 10.91 7.09998 10.28 6.70998 9.89L3.82998 7H18C18.55 7 19 6.55 19 6V2C19 1.45 18.55 0.999996 18 0.999996C17.45 0.999996 17 1.45 17 2Z\"\r\n                        fill=\"white\"\r\n                    />\r\n                </svg>\r\n                <span>{name}</span>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\nBackLink.propTypes = {\r\n    name: PropTypes.string\r\n};\r\n\r\nexport default BackLink;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    changeProductsToBasketList,\r\n    deleteBasketProductById\r\n} from \"../../store/basket\";\r\n\r\nconst BasketItem = ({ product }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"basket-item\">\r\n            <div className=\"basket-item__column-left\">\r\n                <img src={product.imgSrc} alt=\"img\" />\r\n            </div>\r\n            <div className=\"basket-item__column-right\">\r\n                <Link\r\n                    to={`/products/${product._id}`}\r\n                    className=\"product__title title\"\r\n                >\r\n                    {product.name}\r\n                    {product.taste !== \"\" && <span> ({product.taste})</span>}\r\n                </Link>\r\n                <div className=\"basket-item__amount\">\r\n                    <div className=\"item-body__amount\">\r\n                        <div\r\n                            className=\"item-body__amount-minus\"\r\n                            onClick={() =>\r\n                                dispatch(\r\n                                    changeProductsToBasketList(product, 1, true)\r\n                                )\r\n                            }\r\n                        >\r\n                            -\r\n                        </div>\r\n                        <div className=\"item-body__amount-number\">\r\n                            {product.value}\r\n                        </div>\r\n                        <div\r\n                            className=\"item-body__amount-plus\"\r\n                            onClick={() =>\r\n                                dispatch(changeProductsToBasketList(product))\r\n                            }\r\n                        >\r\n                            +\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"basket-item__price\">{product.price} руб.</div>\r\n                <div\r\n                    className=\"basket-item__close-btn\"\r\n                    onClick={() => dispatch(deleteBasketProductById(product))}\r\n                >\r\n                    <svg\r\n                        width=\"27\"\r\n                        height=\"24\"\r\n                        viewBox=\"0 0 27 24\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <rect\r\n                            y=\"22.6484\"\r\n                            width=\"34.4826\"\r\n                            height=\"1\"\r\n                            rx=\"0.5\"\r\n                            transform=\"rotate(-41.057 0 22.6484)\"\r\n                            fill=\"white\"\r\n                        />\r\n                        <rect\r\n                            width=\"34.4826\"\r\n                            height=\"1\"\r\n                            rx=\"0.5\"\r\n                            transform=\"matrix(-0.754056 -0.65681 -0.65681 0.754056 26.6582 22.6484)\"\r\n                            fill=\"white\"\r\n                        />\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nBasketItem.propTypes = {\r\n    product: PropTypes.object.isRequired\r\n};\r\n\r\nexport default BasketItem;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    clearBasketList,\r\n    getBasket,\r\n    getTotalSumOfOrder\r\n} from \"../../store/basket\";\r\nimport BackLink from \"../backLinkComponent/backLink\";\r\nimport BasketItem from \"./basketItem\";\r\n\r\nconst Basket = () => {\r\n    const dispatch = useDispatch();\r\n    let baksetProducts = useSelector(getBasket());\r\n\r\n    const totalSum = useSelector(getTotalSumOfOrder());\r\n\r\n    if (baksetProducts && baksetProducts.length > 0) {\r\n        baksetProducts = baksetProducts.map((product) => {\r\n            return (\r\n                <article\r\n                    key={product._id}\r\n                    className=\"shop__basket-column-left-item\"\r\n                >\r\n                    <BasketItem\r\n                        key={product._id + \"basket\"}\r\n                        product={product}\r\n                    />\r\n                </article>\r\n            );\r\n        });\r\n    } else {\r\n        baksetProducts = (\r\n            <h2 className=\"shop__basket-title\">\r\n                Вы ничего не добавили в корзину\r\n            </h2>\r\n        );\r\n    }\r\n\r\n    // Открытие и закрытие финальной модалки\r\n    const [isModal, setModal] = useState(false);\r\n    const openFinalModalWindow = () => {\r\n        setModal(true);\r\n        dispatch(clearBasketList());\r\n    };\r\n    const closeFinalModalWindow = (event) => {\r\n        setModal(false);\r\n    };\r\n\r\n    // Валидация класса на отправку заказа\r\n    const getSubmitOrder = () => {\r\n        return (\r\n            \"shop__basket-final-btn item-body__buy\" +\r\n            (totalSum > 0 ? \" shop__basket-final-btn-active\" : \"\")\r\n        );\r\n    };\r\n\r\n    return (\r\n        <main className=\"shop\">\r\n            <div className=\"container\">\r\n                <BackLink name=\"Вернуться к покупкам\" />\r\n                <section className=\"shop__basket\">\r\n                    {totalSum > 0 && (\r\n                        <h2 className=\"shop__basket-title title\">\r\n                            Ваши товары в корзине:\r\n                        </h2>\r\n                    )}\r\n                    <div className=\"shop__basket-flex\">\r\n                        <article className=\"shop__basket-column-left\">\r\n                            {baksetProducts}\r\n                        </article>\r\n                        <article className=\"shop__basket-column-right\">\r\n                            <div className=\"shop__basket__total-sum\">\r\n                                Итого: <span>{totalSum} руб.</span>\r\n                            </div>\r\n                            <button\r\n                                className={getSubmitOrder()}\r\n                                onClick={() => openFinalModalWindow()}\r\n                            >\r\n                                Оформить заказ\r\n                            </button>\r\n                        </article>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n            <div\r\n                className={\r\n                    \"modal-final\" + (isModal ? \" modal-final-active\" : \"\")\r\n                }\r\n            >\r\n                <div className=\"modal-final__content\">\r\n                    <div className=\"modal-final__svg\">\r\n                        <svg\r\n                            width=\"15\"\r\n                            height=\"13\"\r\n                            viewBox=\"0 0 15 13\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path\r\n                                d=\"M14 1L4 11.01L1 8.01\"\r\n                                stroke=\"black\"\r\n                                strokeWidth=\"2\"\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                            />\r\n                        </svg>\r\n                    </div>\r\n                    <div className=\"modal-final__text\">\r\n                        Заказ успешно оформлен!\r\n                    </div>\r\n                    <div\r\n                        className=\"modal-final__close-button\"\r\n                        onClick={(event) => closeFinalModalWindow(event)}\r\n                    >\r\n                        <svg\r\n                            width=\"27\"\r\n                            height=\"24\"\r\n                            viewBox=\"0 0 27 24\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <rect\r\n                                y=\"22.6484\"\r\n                                width=\"34.4826\"\r\n                                height=\"1\"\r\n                                rx=\"0.5\"\r\n                                transform=\"rotate(-41.057 0 22.6484)\"\r\n                                fill=\"white\"\r\n                            />\r\n                            <rect\r\n                                width=\"34.4826\"\r\n                                height=\"1\"\r\n                                rx=\"0.5\"\r\n                                transform=\"matrix(-0.754056 -0.65681 -0.65681 0.754056 26.6582 22.6484)\"\r\n                                fill=\"white\"\r\n                            />\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Basket;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCurrentUserId } from \"../../store/users\";\r\n\r\nconst AddCommentForm = ({ onSubmit, productId }) => {\r\n    const currentUserId = useSelector(getCurrentUserId());\r\n    const [data, setData] = useState({});\r\n\r\n    const handleChange = ({ target }) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n\r\n    // Отправка комментария\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        onSubmit(data, productId);\r\n        clearForm();\r\n    };\r\n    // Очитска формы после отправки комментария\r\n    const clearForm = () => {\r\n        setData({});\r\n    };\r\n    // Валидация класса на отправку комментария\r\n    const getSubmitComment = () => {\r\n        return (\r\n            \"comments__add-submit\" +\r\n            (data.content ? \" comments__add-submit-active\" : \"\")\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {currentUserId && (\r\n                <article className=\"comments__add\">\r\n                    <form className=\"comments__add-form\">\r\n                        <textarea\r\n                            name=\"content\"\r\n                            id=\"comment\"\r\n                            placeholder=\"Написать отзыв\"\r\n                            className=\"comments__add-textarea\"\r\n                            onChange={handleChange}\r\n                            value={data.content || \"\"}\r\n                        ></textarea>\r\n                        <button\r\n                            type=\"button\"\r\n                            className={getSubmitComment()}\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            Опубликовать\r\n                        </button>\r\n                    </form>\r\n                </article>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nAddCommentForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n    productId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default AddCommentForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { displayDate } from \"../../../utils/displayDate\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCurrentUserId, getUserById } from \"../../store/users\";\r\n\r\nconst Comment = ({\r\n    content,\r\n    created_at: created,\r\n    _id: id,\r\n    userId,\r\n    onRemove\r\n}) => {\r\n    const currentUserId = useSelector(getCurrentUserId());\r\n\r\n    const user = useSelector(getUserById(userId));\r\n\r\n    const sliceLastame = (lastname) => {\r\n        if (lastname) {\r\n            return lastname.slice(0, 1).toUpperCase() + \".\";\r\n        }\r\n    };\r\n    const toUpperFirstLetter = (name) => {\r\n        if (name) {\r\n            return name.slice(0, 1).toUpperCase() + name.slice(1);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <article className=\"comments__item\">\r\n                <div className=\"comments__item-flex\">\r\n                    <div className=\"comments__item-avatar\">\r\n                        <img src=\"/img/users/default-user.png\" alt=\"avatar\" />\r\n                    </div>\r\n                    <div className=\"comments__item-content\">\r\n                        <div className=\"comments__item-header\">\r\n                            <p className=\"comments__item-name\">\r\n                                <span>{toUpperFirstLetter(user.name)}</span>\r\n                                <span>{sliceLastame(user.lastName)}</span>\r\n                            </p>\r\n                            <p className=\"comments__item-date\">\r\n                                {displayDate(created)}\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"comments__item-comment\">\r\n                            <p className=\"comments__item-text\">{content}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {currentUserId === userId && (\r\n                    <div\r\n                        className=\"comments__item-close\"\r\n                        onClick={() => onRemove(id)}\r\n                    >\r\n                        <svg\r\n                            width=\"27\"\r\n                            height=\"24\"\r\n                            viewBox=\"0 0 27 24\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <rect\r\n                                y=\"22.6484\"\r\n                                width=\"34.4826\"\r\n                                height=\"1\"\r\n                                rx=\"0.5\"\r\n                                transform=\"rotate(-41.057 0 22.6484)\"\r\n                                fill=\"white\"\r\n                            />\r\n                            <rect\r\n                                width=\"34.4826\"\r\n                                height=\"1\"\r\n                                rx=\"0.5\"\r\n                                transform=\"matrix(-0.754056 -0.65681 -0.65681 0.754056 26.6582 22.6484)\"\r\n                                fill=\"white\"\r\n                            />\r\n                        </svg>\r\n                    </div>\r\n                )}\r\n            </article>\r\n        </>\r\n    );\r\n};\r\nComment.propTypes = {\r\n    content: PropTypes.string,\r\n    edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    userId: PropTypes.string,\r\n    onRemove: PropTypes.func,\r\n    _id: PropTypes.string\r\n};\r\nexport default Comment;\r\n","import httpService from \"./http.service\";\r\nconst commentEndpoint = \"comments/\";\r\n\r\nconst commentService = {\r\n    createComment: async (payload) => {\r\n        const { data } = await httpService.post(commentEndpoint, payload);\r\n        return data;\r\n    },\r\n    getComments: async (productId) => {\r\n        const { data } = await httpService.get(commentEndpoint, {\r\n            params: {\r\n                orderBy: \"productId\",\r\n                equalTo: `${productId}`\r\n            }\r\n        });\r\n        return data;\r\n    },\r\n    fetchAll: async () => {\r\n        const { data } = await httpService.get(commentEndpoint);\r\n        return data;\r\n    },\r\n    removeComment: async (commentId) => {\r\n        const { data } = await httpService.delete(commentEndpoint + commentId);\r\n        return data;\r\n    }\r\n};\r\nexport default commentService;\r\n","import { createSlice, createAction } from \"@reduxjs/toolkit\";\r\nimport commentService from \"../services/comment.service\";\r\nimport { getCurrentUserId, updateCurrentUserData } from \"./users\";\r\n\r\nconst commentsSlice = createSlice({\r\n    name: \"comments\",\r\n    initialState: {\r\n        entities: null,\r\n        isLoading: true,\r\n        error: null\r\n    },\r\n    reducers: {\r\n        commentsRequested: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        commentsReceived: (state, action) => {\r\n            state.entities = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        commentsReceivedError: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        commentCreated: (state, action) => {\r\n            state.entities.push(action.payload);\r\n        },\r\n        commentRemoved: (state, action) => {\r\n            state.entities = state.entities.filter(\r\n                (c) => c._id !== action.payload\r\n            );\r\n        }\r\n    }\r\n});\r\n\r\nconst { reducer: commentsReducer, actions } = commentsSlice;\r\nconst {\r\n    commentsRequested,\r\n    commentsReceived,\r\n    commentsReceivedError,\r\n    commentCreated,\r\n    commentRemoved\r\n} = actions;\r\n\r\nconst addCommentRequested = createAction(\"comments/addCommentRequested\");\r\nconst removeCommentRequested = createAction(\"comments/removeCommentRequested\");\r\nconst checkCommentRequested = createAction(\"comments/checkCommentRequested\");\r\n\r\nexport const loadCommentsList = (productId) => async (dispatch) => {\r\n    dispatch(commentsRequested());\r\n    try {\r\n        const { content } = await commentService.getComments(productId);\r\n        dispatch(commentsReceived(content));\r\n    } catch (error) {\r\n        dispatch(commentsReceivedError(error));\r\n    }\r\n};\r\n\r\nexport const getComments = () => (state) => state.comments.entities;\r\nexport const getCommentsLoadingStatus = () => (state) =>\r\n    state.comments.isLoading;\r\n\r\nexport const createComment = (payload) => async (dispatch) => {\r\n    dispatch(addCommentRequested());\r\n    try {\r\n        const { content } = await commentService.createComment(payload);\r\n        dispatch(commentCreated(content));\r\n        dispatch(checkCommentsAmount());\r\n    } catch (error) {\r\n        dispatch(commentsReceivedError(error));\r\n    }\r\n};\r\nexport const removeComment = (commentId) => async (dispatch) => {\r\n    dispatch(removeCommentRequested());\r\n    try {\r\n        const { content } = await commentService.removeComment(commentId);\r\n        if (!content) {\r\n            dispatch(commentRemoved(commentId));\r\n            dispatch(checkCommentsAmount());\r\n        }\r\n    } catch (error) {\r\n        dispatch(commentsReceivedError(error));\r\n    }\r\n};\r\n\r\nexport function checkCommentsAmount() {\r\n    return async function (dispatch, getState) {\r\n        dispatch(checkCommentRequested());\r\n        try {\r\n            const { content } = await commentService.fetchAll();\r\n            if (content) {\r\n                const amountComments = content.filter(\r\n                    (elem) => elem.userId === getCurrentUserId()(getState())\r\n                );\r\n                dispatch(\r\n                    updateCurrentUserData({\r\n                        amountReviews: amountComments.length\r\n                    })\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    updateCurrentUserData({\r\n                        amountReviews: 1\r\n                    })\r\n                );\r\n            }\r\n        } catch (error) {\r\n            dispatch(commentsReceivedError(error));\r\n        }\r\n    };\r\n}\r\n\r\nexport default commentsReducer;\r\n","import React, { useEffect } from \"react\";\r\nimport AddCommentForm from \"./addCommentForm\";\r\nimport Comment from \"./comment\";\r\nimport PropTypes from \"prop-types\";\r\nimport { orderBy } from \"lodash\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCurrentUserId } from \"../../store/users\";\r\nimport {\r\n    createComment,\r\n    getComments,\r\n    getCommentsLoadingStatus,\r\n    loadCommentsList,\r\n    removeComment\r\n} from \"../../store/comments\";\r\n\r\nconst Comments = ({ productId }) => {\r\n    const currentUserId = useSelector(getCurrentUserId());\r\n    const comments = useSelector(getComments());\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(loadCommentsList(productId));\r\n    }, []);\r\n    const isLoading = useSelector(getCommentsLoadingStatus());\r\n\r\n    const handleRemoveComment = (commentId) => {\r\n        dispatch(removeComment(commentId));\r\n    };\r\n    const handleSubmit = (data, productId) => {\r\n        dispatch(\r\n            createComment({\r\n                ...data,\r\n                productId: productId,\r\n                userId: currentUserId\r\n            })\r\n        );\r\n    };\r\n\r\n    // Сортировка комментариев\r\n    const sortedComments = orderBy(comments, [\"created_at\"], [\"desc\"]);\r\n\r\n    return (\r\n        <div className=\"comments\">\r\n            <h2 className=\"comments__title\">Отзывы</h2>\r\n            {!isLoading &&\r\n                sortedComments.map((comment) => (\r\n                    <Comment\r\n                        key={comment._id}\r\n                        {...comment}\r\n                        onRemove={handleRemoveComment}\r\n                    />\r\n                ))}\r\n            {!isLoading && sortedComments.length === 0 && (\r\n                <h2 className=\"comments__subtitle\">\r\n                    {currentUserId\r\n                        ? \"Еще никто не оставил отзыв о товаре. Будьте первым!\"\r\n                        : \"Еще никто не оставил отзыв о товаре...\"}\r\n                </h2>\r\n            )}\r\n            <AddCommentForm onSubmit={handleSubmit} productId={productId} />\r\n        </div>\r\n    );\r\n};\r\nComments.propTypes = {\r\n    productId: PropTypes.string.isRequired\r\n};\r\nexport default Comments;\r\n","export const constants = {\r\n    categories: [\r\n        \"Обувь\",\r\n        \"Одежда\",\r\n        \"Головные уборы\",\r\n        \"Спортивный инвентарь\",\r\n        \"Продукты\",\r\n        \"Детское питание\",\r\n        \"Молочная продукция\",\r\n        \"Спортивное питание\"\r\n    ],\r\n    sort: {\r\n        price: \"Цена\",\r\n        name: \"Название\",\r\n        rating: \"Рейтинг товара\",\r\n        reviews: \"Количество отзывов\"\r\n    },\r\n    messages: {\r\n        addToBasket:\r\n            \"Чтобы добавить товар в корзину, необходимо авторизоваться\",\r\n        addToFavourite:\r\n            \"Чтобы добавить товар в избранное, необходимо авторизоваться\"\r\n    }\r\n};\r\n","function isOutDated(date) {\r\n    if (Date.now() - date > 10 * 60 * 1000) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport default isOutDated;\r\n","import httpService from \"./http.service\";\r\n\r\nconst productsEndPoint = \"products/\";\r\n\r\nconst productsService = {\r\n    get: async () => {\r\n        const req = await httpService.get(productsEndPoint);\r\n        return req.data;\r\n    }\r\n};\r\nexport default productsService;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport isOutDated from \"../../utils/isOutDated\";\r\nimport productsService from \"../services/products.service\";\r\n\r\nconst productsSlice = createSlice({\r\n    name: \"products\",\r\n    initialState: {\r\n        entities: null,\r\n        isLoading: true,\r\n        error: null,\r\n        lastFetch: null\r\n    },\r\n    reducers: {\r\n        productsRequested: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        productsReceived: (state, action) => {\r\n            state.entities = action.payload;\r\n            state.isLoading = false;\r\n            state.lastFetch = Date.now();\r\n        },\r\n        productsReceivedError: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        }\r\n    }\r\n});\r\n\r\nconst { reducer: productsReducer, actions } = productsSlice;\r\nconst { productsRequested, productsReceived, productsReceivedError } = actions;\r\n\r\nexport const loadProductsList = () => async (dispatch, getState) => {\r\n    const { lastFetch } = getState().products;\r\n    if (isOutDated(lastFetch)) {\r\n        dispatch(productsRequested());\r\n        try {\r\n            const { content } = await productsService.get();\r\n            dispatch(productsReceived(content));\r\n        } catch (error) {\r\n            dispatch(productsReceivedError(error));\r\n        }\r\n    }\r\n};\r\n\r\nexport const getProducts = () => (state) => state.products.entities;\r\nexport const getProductsError = () => (state) => state.products.error;\r\nexport const getProductsLoadingStatus = () => (state) =>\r\n    state.products.isLoading;\r\n\r\nexport default productsReducer;\r\n","export function errorCatcher(error) {\r\n    const body = document.querySelector(\"body\");\r\n\r\n    const errorElement = document.createElement(\"div\");\r\n    errorElement.className = \"error-modal\";\r\n    errorElement.textContent = error;\r\n    body.append(errorElement);\r\n    setTimeout(() => {\r\n        errorElement.remove();\r\n    }, 3000);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport BackLink from \"../../backLinkComponent/backLink\";\r\nimport PropTypes from \"prop-types\";\r\nimport Comments from \"../../comments/comments\";\r\nimport { constants } from \"../../../constants/constants\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProducts, getProductsError } from \"../../../store/products\";\r\nimport { getCurrentUserId } from \"../../../store/users\";\r\nimport { getFavouritesById, toggleFavourite } from \"../../../store/favourite\";\r\nimport { changeProductsToBasketList } from \"../../../store/basket\";\r\nimport { errorCatcher } from \"../../../../utils/errorCatcher\";\r\n\r\nconst ProductPage = ({ productId }) => {\r\n    const dispatch = useDispatch();\r\n    const products = useSelector(getProducts());\r\n\r\n    const productError = useSelector(getProductsError());\r\n    if (productError) {\r\n        errorCatcher(productError);\r\n    }\r\n    const currentUserId = useSelector(getCurrentUserId());\r\n    const [foundProduct, setFoundProduct] = useState();\r\n\r\n    useEffect(() => {\r\n        if (products) {\r\n            setFoundProduct(\r\n                products.find((product) => {\r\n                    return product._id === productId;\r\n                })\r\n            );\r\n        }\r\n    }, [products]);\r\n\r\n    const [productCount, setProductCount] = useState(1);\r\n\r\n    const upProductCount = () => {\r\n        setProductCount((prevState) => prevState + 1);\r\n    };\r\n    const downProductCount = () => {\r\n        if (productCount >= 1) {\r\n            setProductCount((prevState) => prevState - 1);\r\n        }\r\n    };\r\n\r\n    const isFavourite = useSelector(getFavouritesById(productId));\r\n\r\n    return (\r\n        <main className=\"shop\">\r\n            <div className=\"container\">\r\n                <BackLink name=\"Вернуться к покупкам\" />\r\n                {foundProduct ? (\r\n                    <section className=\"shop__item\">\r\n                        <div className=\"shop__item-body item-body\">\r\n                            <div className=\"item-body__flex\">\r\n                                <div className=\"item-body__column-left\">\r\n                                    <img\r\n                                        src={foundProduct.imgSrc}\r\n                                        alt=\"product\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"item-body__column-right\">\r\n                                    <h2 className=\"item-body__title title\">\r\n                                        {foundProduct.name}\r\n                                        {foundProduct.taste !== \"\" && (\r\n                                            <span> ({foundProduct.taste})</span>\r\n                                        )}\r\n                                    </h2>\r\n                                    <div className=\"item-body__amount\">\r\n                                        <div\r\n                                            className=\"item-body__amount-minus\"\r\n                                            onClick={downProductCount}\r\n                                        >\r\n                                            -\r\n                                        </div>\r\n                                        <div className=\"item-body__amount-number\">\r\n                                            {productCount}\r\n                                        </div>\r\n                                        <div\r\n                                            className=\"item-body__amount-plus\"\r\n                                            onClick={upProductCount}\r\n                                        >\r\n                                            +\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"item-body__sum\">\r\n                                        {foundProduct.price} руб.\r\n                                    </div>\r\n                                    {currentUserId && (\r\n                                        <button\r\n                                            className=\"item-body__buy\"\r\n                                            onClick={() =>\r\n                                                dispatch(\r\n                                                    changeProductsToBasketList(\r\n                                                        foundProduct,\r\n                                                        productCount\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            Добавить в корзину\r\n                                        </button>\r\n                                    )}\r\n                                    {!currentUserId && (\r\n                                        <button\r\n                                            className=\"item-body__buy\"\r\n                                            onClick={() =>\r\n                                                errorCatcher(\r\n                                                    constants.messages\r\n                                                        .addToBasket\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            Добавить в корзину\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div\r\n                                className={\r\n                                    \"product__favorites\" +\r\n                                    (isFavourite\r\n                                        ? \" product__favorites-active\"\r\n                                        : \"\")\r\n                                }\r\n                                onClick={\r\n                                    currentUserId\r\n                                        ? () =>\r\n                                              dispatch(\r\n                                                  toggleFavourite(foundProduct)\r\n                                              )\r\n                                        : () =>\r\n                                              errorCatcher(\r\n                                                  constants.messages\r\n                                                      .addToFavourite\r\n                                              )\r\n                                }\r\n                            >\r\n                                <svg\r\n                                    width=\"14\"\r\n                                    height=\"13\"\r\n                                    viewBox=\"0 0 14 13\"\r\n                                    fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                >\r\n                                    <path\r\n                                        d=\"M6.54597 0.984332C6.72468 0.596896 7.27532 0.596897 7.45403 0.984332L8.85773 4.02756C8.93057 4.18546 9.08021 4.29418 9.25289 4.31466L12.5809 4.70925C13.0046 4.75949 13.1748 5.28318 12.8615 5.57286L10.401 7.84827C10.2734 7.96634 10.2162 8.14225 10.2501 8.31281L10.9032 11.5999C10.9864 12.0184 10.5409 12.342 10.1686 12.1336L7.24422 10.4967C7.09248 10.4118 6.90752 10.4118 6.75578 10.4967L3.8314 12.1336C3.45909 12.342 3.01361 12.0184 3.09676 11.5999L3.74991 8.31281C3.78379 8.14225 3.72664 7.96634 3.59897 7.84827L1.13846 5.57286C0.825207 5.28318 0.995366 4.75949 1.41906 4.70925L4.74711 4.31466C4.91979 4.29418 5.06943 4.18546 5.14227 4.02756L6.54597 0.984332Z\"\r\n                                        fill=\"white\"\r\n                                    />\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"shop__item-comments\">\r\n                            <Comments productId={productId} />\r\n                        </div>\r\n                    </section>\r\n                ) : (\r\n                    \"Идет загрузка информации о товаре...\"\r\n                )}\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\nProductPage.propTypes = {\r\n    productId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ProductPage;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { constants } from \"../../../../constants/constants\";\r\n\r\nconst Category = ({\r\n    clearCategory,\r\n    changeCategoryItems,\r\n    selectedCategoryItem\r\n}) => {\r\n    const [categoryText, setCategoryText] = useState(false);\r\n\r\n    const categoryParent = document.querySelector(\".category\");\r\n    const overlay = document.querySelector(\".overlay\");\r\n    const body = document.querySelector(\"body\");\r\n\r\n    const changeClasses = () => {\r\n        categoryParent.classList.toggle(\"category-active\");\r\n        overlay.classList.toggle(\"overlay-active\");\r\n        body.classList.toggle(\"lock\");\r\n        setCategoryText((prevState) => !prevState);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                className=\"category__open item-body__buy\"\r\n                onClick={changeClasses}\r\n            >\r\n                {categoryText ? \"Закрыть\" : \"Открыть\"} категории\r\n            </button>\r\n            <div className=\"overlay\" onClick={changeClasses}></div>\r\n            <article className=\"content__category category\">\r\n                <h2 className=\"category__title title\">Категории:</h2>\r\n                <div className=\"category__items\">\r\n                    {constants.categories\r\n                        ? constants.categories.map((item) => {\r\n                              return (\r\n                                  <button\r\n                                      key={item}\r\n                                      className={\r\n                                          \"category__item hover\" +\r\n                                          (item === selectedCategoryItem\r\n                                              ? \" category__item-active\"\r\n                                              : \"\")\r\n                                      }\r\n                                      onClick={() => changeCategoryItems(item)}\r\n                                  >\r\n                                      {item}\r\n                                  </button>\r\n                              );\r\n                          })\r\n                        : \"Загрузка...\"}\r\n                </div>\r\n                <div className=\"category__reset\" onClick={clearCategory}>\r\n                    Сбросить фильтр\r\n                </div>\r\n            </article>\r\n        </>\r\n    );\r\n};\r\nCategory.propTypes = {\r\n    clearCategory: PropTypes.func.isRequired,\r\n    changeCategoryItems: PropTypes.func.isRequired,\r\n    selectedCategoryItem: PropTypes.string\r\n};\r\n\r\nexport default Category;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { constants } from \"../../../../constants/constants\";\r\n\r\nconst Sort = ({ onSort, currentSort }) => {\r\n    const handleSort = (event, item) => {\r\n        const allTar = document.querySelectorAll(\".sort__item\");\r\n        const tar = event.target;\r\n        const classesOfTargetItem =\r\n            \"sort__item-active\" || \"sort__item-active-rotate\";\r\n        if (tar.classList.contains(classesOfTargetItem)) {\r\n            allTar.forEach((item) => {\r\n                item.classList.remove(\"sort__item-active\");\r\n                item.classList.remove(\"sort__item-active-rotate\");\r\n                tar.classList.add(\"sort__item-active-rotate\");\r\n            });\r\n        } else {\r\n            allTar.forEach((item) => {\r\n                item.classList.remove(\"sort__item-active\");\r\n                item.classList.remove(\"sort__item-active-rotate\");\r\n            });\r\n            tar.classList.toggle(\"sort__item-active\");\r\n        }\r\n        if (item === currentSort.iter) {\r\n            onSort({\r\n                ...currentSort,\r\n                order: currentSort.order === \"asc\" ? \"desc\" : \"asc\"\r\n            });\r\n        } else {\r\n            onSort({ iter: item, order: \"asc\" });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"content__sort sort\">\r\n            <h2 className=\"sort__title title\">Сортировать по:</h2>\r\n            <div className=\"sort__items\">\r\n                {constants.sort\r\n                    ? Object.keys(constants.sort).map((item) => {\r\n                          return (\r\n                              <p\r\n                                  key={item}\r\n                                  onClick={(event) => handleSort(event, item)}\r\n                                  className=\"sort__item hover\"\r\n                              >\r\n                                  {constants.sort[item]}\r\n                              </p>\r\n                          );\r\n                      })\r\n                    : \"Идет загрузка...\"}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nSort.propTypes = {\r\n    itemName: PropTypes.string,\r\n    itemKey: PropTypes.string,\r\n    onSort: PropTypes.func.isRequired,\r\n    currentSort: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Sort;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Search = ({ searchValue, changeValueSearch }) => {\r\n    return (\r\n        <section className=\"shop__search search\">\r\n            <form action=\"#\" className=\"search__form\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"search__input\"\r\n                    placeholder=\"Поиск товаров\"\r\n                    value={searchValue}\r\n                    onChange={(event) => changeValueSearch(event)}\r\n                />\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\nSearch.propTypes = {\r\n    searchValue: PropTypes.string,\r\n    changeValueSearch: PropTypes.func\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { constants } from \"../../../constants/constants\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCurrentUserId } from \"../../../store/users\";\r\nimport { getFavouritesById, toggleFavourite } from \"../../../store/favourite\";\r\nimport { changeProductsToBasketList } from \"../../../store/basket\";\r\nimport { getProductsError } from \"../../../store/products\";\r\nimport { errorCatcher } from \"../../../../utils/errorCatcher\";\r\n\r\nconst ProductsItem = ({ product }) => {\r\n    const dispatch = useDispatch();\r\n    const productError = useSelector(getProductsError());\r\n    if (productError) {\r\n        errorCatcher();\r\n    }\r\n    const currentUserId = useSelector(getCurrentUserId());\r\n    const isFavourite = useSelector(getFavouritesById(product._id));\r\n\r\n    let reviewWord;\r\n    if (Number(product.reviews) === 0 || Number(product.reviews) % 10 === 0) {\r\n        reviewWord = \"отзывов\";\r\n    } else if (Number(product.reviews) === 1) {\r\n        reviewWord = \"отзыв\";\r\n    } else {\r\n        reviewWord = \"отзыва\";\r\n    }\r\n\r\n    let colorOfStar;\r\n    if (product.rating >= 4.8 && product.rating <= 5) {\r\n        colorOfStar = \"green\";\r\n    } else if (product.rating >= 4.3 && product.rating <= 4.7) {\r\n        colorOfStar = \"lightgreen\";\r\n    } else if (product.rating >= 3.8 && product.rating <= 4.2) {\r\n        colorOfStar = \"yellow\";\r\n    } else if (product.rating <= 3.7) {\r\n        colorOfStar = \"red\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"products__product product\">\r\n            <div className=\"product__flex\">\r\n                <Link to={`/products/${product._id}`}>\r\n                    <div className=\"product__column-left\">\r\n                        <img src={product.imgSrc} alt=\"img\" />\r\n                    </div>\r\n                </Link>\r\n                <div className=\"product__column-right\">\r\n                    <h2 className=\"product__title title\">\r\n                        {product.name}\r\n                        {product.taste !== \"\" && (\r\n                            <span> ({product.taste})</span>\r\n                        )}\r\n                    </h2>\r\n                    <div className=\"product__people\">\r\n                        <div className=\"product__rating\">\r\n                            <svg\r\n                                width=\"14\"\r\n                                height=\"13\"\r\n                                viewBox=\"0 0 14 13\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    d=\"M6.54597 0.984332C6.72468 0.596896 7.27532 0.596897 7.45403 0.984332L8.85773 4.02756C8.93057 4.18546 9.08021 4.29418 9.25289 4.31466L12.5809 4.70925C13.0046 4.75949 13.1748 5.28318 12.8615 5.57286L10.401 7.84827C10.2734 7.96634 10.2162 8.14225 10.2501 8.31281L10.9032 11.5999C10.9864 12.0184 10.5409 12.342 10.1686 12.1336L7.24422 10.4967C7.09248 10.4118 6.90752 10.4118 6.75578 10.4967L3.8314 12.1336C3.45909 12.342 3.01361 12.0184 3.09676 11.5999L3.74991 8.31281C3.78379 8.14225 3.72664 7.96634 3.59897 7.84827L1.13846 5.57286C0.825207 5.28318 0.995366 4.75949 1.41906 4.70925L4.74711 4.31466C4.91979 4.29418 5.06943 4.18546 5.14227 4.02756L6.54597 0.984332Z\"\r\n                                    fill={colorOfStar}\r\n                                />\r\n                            </svg>\r\n                            <p>{product.rating}</p>\r\n                        </div>\r\n                        <div className=\"product__reviews\">\r\n                            {product.reviews} {reviewWord}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"product__price\">{product.price} руб.</div>\r\n                    <button\r\n                        className=\"product__add-basket item-body__buy\"\r\n                        onClick={\r\n                            currentUserId\r\n                                ? () =>\r\n                                      dispatch(\r\n                                          changeProductsToBasketList(product)\r\n                                      )\r\n                                : () =>\r\n                                      errorCatcher(\r\n                                          constants.messages.addToBasket\r\n                                      )\r\n                        }\r\n                    >\r\n                        Добавить в корзину\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={\r\n                    \"product__favorites\" +\r\n                    (isFavourite ? \" product__favorites-active\" : \"\")\r\n                }\r\n                onClick={\r\n                    currentUserId\r\n                        ? () => dispatch(toggleFavourite(product))\r\n                        : () => errorCatcher(constants.messages.addToFavourite)\r\n                }\r\n            >\r\n                <svg\r\n                    width=\"14\"\r\n                    height=\"13\"\r\n                    viewBox=\"0 0 14 13\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M6.54597 0.984332C6.72468 0.596896 7.27532 0.596897 7.45403 0.984332L8.85773 4.02756C8.93057 4.18546 9.08021 4.29418 9.25289 4.31466L12.5809 4.70925C13.0046 4.75949 13.1748 5.28318 12.8615 5.57286L10.401 7.84827C10.2734 7.96634 10.2162 8.14225 10.2501 8.31281L10.9032 11.5999C10.9864 12.0184 10.5409 12.342 10.1686 12.1336L7.24422 10.4967C7.09248 10.4118 6.90752 10.4118 6.75578 10.4967L3.8314 12.1336C3.45909 12.342 3.01361 12.0184 3.09676 11.5999L3.74991 8.31281C3.78379 8.14225 3.72664 7.96634 3.59897 7.84827L1.13846 5.57286C0.825207 5.28318 0.995366 4.75949 1.41906 4.70925L4.74711 4.31466C4.91979 4.29418 5.06943 4.18546 5.14227 4.02756L6.54597 0.984332Z\"\r\n                        fill=\"white\"\r\n                    />\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nProductsItem.propTypes = {\r\n    product: PropTypes.object.isRequired,\r\n    addItemToBasket: PropTypes.func,\r\n    addItemToFavorites: PropTypes.func\r\n};\r\n\r\nexport default ProductsItem;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = ({\r\n    allAmountProducts,\r\n    sizeOnePage,\r\n    pageChange,\r\n    currentPage\r\n}) => {\r\n    const pageNumbers = Math.ceil(allAmountProducts / sizeOnePage);\r\n    if (pageNumbers === 1) {\r\n        return null;\r\n    }\r\n    const pages = _.range(1, pageNumbers + 1);\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pages.map((page) => {\r\n                    return (\r\n                        <li\r\n                            className={\r\n                                \"pagination__item\" +\r\n                                (page === currentPage ? \"-active\" : \"\")\r\n                            }\r\n                            key={page}\r\n                        >\r\n                            <button\r\n                                className=\"pagination__link\"\r\n                                onClick={() => pageChange(page)}\r\n                            >\r\n                                {page}\r\n                            </button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\nPagination.propTypes = {\r\n    allAmountProducts: PropTypes.number.isRequired,\r\n    sizeOnePage: PropTypes.number.isRequired,\r\n    pageChange: PropTypes.func.isRequired,\r\n    currentPage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Category from \"./category/category\";\r\nimport Sort from \"./sort/sort\";\r\nimport Search from \"../../search/search\";\r\nimport ProductsItem from \"./productsItem\";\r\nimport Pagination from \"../../pagination/pagination\";\r\nimport { paginate } from \"../../../../utils/paginate\";\r\nimport _ from \"lodash\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getProducts } from \"../../../store/products\";\r\n\r\nconst ProductsPage = () => {\r\n    const products = useSelector(getProducts());\r\n    // сортировка =========================================================\r\n    const [sortBy, setSortBy] = useState({ iter: \"\", order: \"\" });\r\n    const onSort = (item) => {\r\n        setSortBy(item);\r\n    };\r\n    // Пагинация\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    // выбор категории в левом меню\r\n    const [selectedCategoryItem, setSelectedCategoryItem] = useState();\r\n    // поиск продуктов\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [searchValueFoundProducts, setSearchValueFoundProducts] = useState();\r\n\r\n    const sizeOnePage = 3;\r\n    const pageChange = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    // выбор категории в левом меню\r\n    const changeCategoryItems = (item) => {\r\n        setSelectedCategoryItem(item);\r\n        setCurrentPage(1);\r\n        setSearchValue(\"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(1);\r\n    }, [selectedCategoryItem]);\r\n\r\n    // поиск продуктов\r\n    const changeValueSearch = (event) => {\r\n        setSearchValue(() => event.target.value);\r\n        setSelectedCategoryItem();\r\n        setCurrentPage(1);\r\n    };\r\n    useEffect(() => {\r\n        if (searchValue.length > 0) {\r\n            setSearchValueFoundProducts(\r\n                products.filter((product) =>\r\n                    product.name\r\n                        .toLowerCase()\r\n                        .replace(/\\s+/g, \"\")\r\n                        .includes(searchValue.toLowerCase().trim())\r\n                )\r\n            );\r\n        }\r\n    }, [searchValue]);\r\n\r\n    // фильтрация продуктов по категориям или поиску\r\n    let filteredProductsCategory;\r\n    if (selectedCategoryItem) {\r\n        filteredProductsCategory = products.filter(\r\n            (item) => item.category === selectedCategoryItem\r\n        );\r\n    } else if (searchValue.length > 0) {\r\n        filteredProductsCategory = searchValueFoundProducts;\r\n    } else {\r\n        filteredProductsCategory = products;\r\n    }\r\n\r\n    const sortedProducts = _.orderBy(\r\n        filteredProductsCategory,\r\n        [sortBy.iter],\r\n        [sortBy.order]\r\n    );\r\n    // пагинация\r\n    const allAmountProducts = filteredProductsCategory\r\n        ? filteredProductsCategory.length\r\n        : 0;\r\n\r\n    const cropProducts = paginate(sortedProducts, currentPage, sizeOnePage);\r\n    // ===================================================================================\r\n\r\n    // очистка выбора категорий\r\n    const clearCategory = () => {\r\n        setSelectedCategoryItem();\r\n    };\r\n\r\n    let downloadProducts;\r\n    if (products) {\r\n        downloadProducts = cropProducts.map((product) => {\r\n            return <ProductsItem key={product._id} product={product} />;\r\n        });\r\n    } else {\r\n        downloadProducts = \"Пожалуйста, подождтите...\";\r\n    }\r\n    // ===================================================================================\r\n\r\n    return (\r\n        <main className=\"shop\">\r\n            <div className=\"container\">\r\n                <Search\r\n                    searchValue={searchValue}\r\n                    changeValueSearch={changeValueSearch}\r\n                />\r\n                <section className=\"shop__content content\">\r\n                    <Category\r\n                        selectedCategoryItem={selectedCategoryItem}\r\n                        changeCategoryItems={changeCategoryItems}\r\n                        clearCategory={clearCategory}\r\n                    />\r\n                    <article className=\"content__body\">\r\n                        <Sort onSort={onSort} currentSort={sortBy} />\r\n                        <article className=\"content__products products\">\r\n                            {downloadProducts}\r\n                        </article>\r\n                        <Pagination\r\n                            allAmountProducts={allAmountProducts}\r\n                            sizeOnePage={sizeOnePage}\r\n                            pageChange={pageChange}\r\n                            currentPage={currentPage}\r\n                        />\r\n                    </article>\r\n                </section>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default ProductsPage;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport ProductPage from \"./productPage/product\";\r\nimport ProductsList from \"./productsPage/productsList\";\r\n\r\nconst Products = () => {\r\n    const params = useParams();\r\n    const productId = params.productId;\r\n\r\n    return productId ? <ProductPage productId={productId} /> : <ProductsList />;\r\n};\r\n\r\nexport default Products;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <main className=\"error\">\r\n            <article className=\"error-404\">\r\n                <h1>Ошибка 404</h1>\r\n                <h2>Страница не найдена</h2>\r\n                <Link to=\"/products\">\r\n                    <span className=\"error-return\">\r\n                        Вернуться на главную страницу\r\n                    </span>\r\n                </Link>\r\n            </article>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getFavourites } from \"../../store/favourite\";\r\nimport { getProducts } from \"../../store/products\";\r\nimport BackLink from \"../backLinkComponent/backLink\";\r\nimport ProductsItem from \"../products/productsPage/productsItem\";\r\n\r\nconst FavoritesPage = () => {\r\n    const products = useSelector(getProducts());\r\n\r\n    const foundFavoriteProducts = useSelector(getFavourites());\r\n\r\n    let favoriteProducts;\r\n    if (foundFavoriteProducts && foundFavoriteProducts.length === 0) {\r\n        favoriteProducts = (\r\n            <h2 className=\"shop__basket-title\">\r\n                Вы ничего не добавили в избранное\r\n            </h2>\r\n        );\r\n    } else if (products && foundFavoriteProducts) {\r\n        favoriteProducts = foundFavoriteProducts.map((product) => {\r\n            return <ProductsItem key={product._id} product={product} />;\r\n        });\r\n    } else {\r\n        favoriteProducts = \"Похоже, что вы ничего не добавили в избранное...\";\r\n    }\r\n\r\n    return (\r\n        <main className=\"shop\">\r\n            <div className=\"container\">\r\n                <section className=\"shop__basket\">\r\n                    <BackLink name=\"Вернуться к покупкам\" />\r\n                    <h2 className=\"shop__basket-title title\">Избранное</h2>\r\n                    <div>{favoriteProducts}</div>\r\n                </section>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default FavoritesPage;\r\n","import { useEffect, useState } from \"react\";\r\nimport products from \"./products.json\";\r\nimport httpService from \"../services/http.service\";\r\n\r\nconst mockData = () => {\r\n    const statusConsts = {\r\n        idle: \"Не начато\",\r\n        pending: \"В процессе...\",\r\n        successed: \"Готово\",\r\n        error: \"Произошла ошибка\"\r\n    };\r\n    const [error, setError] = useState(null);\r\n    const [status, setStatus] = useState(statusConsts.idle);\r\n    const [progress, setProgress] = useState(0);\r\n    const [count, setCount] = useState(0);\r\n    const summuryCount = products.length;\r\n    const incrementCount = () => {\r\n        setCount((prevState) => prevState + 1);\r\n    };\r\n    const updateProgress = () => {\r\n        if (count !== 0 && status === statusConsts.idle) {\r\n            setStatus(statusConsts.pending);\r\n        }\r\n        const newProgress = Math.floor((count / summuryCount) * 100);\r\n        if (progress < newProgress) {\r\n            setProgress(() => newProgress);\r\n        }\r\n        if (newProgress === 100) {\r\n            setStatus(statusConsts.successed);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateProgress();\r\n    }, [count]);\r\n    async function initialize() {\r\n        try {\r\n            for (const prod of products) {\r\n                await httpService.put(\"products/\" + prod._id, prod);\r\n                incrementCount();\r\n            }\r\n        } catch (error) {\r\n            setError(error);\r\n            setStatus(statusConsts.error);\r\n        }\r\n    }\r\n\r\n    return { error, initialize, progress, status };\r\n};\r\n\r\nexport default mockData;\r\n","import React from \"react\";\r\nimport config from \"../../config.json\";\r\nimport mockData from \"../../mockData/mockData\";\r\n\r\nconst Initialize = () => {\r\n    const { error, initialize, progress, status } = mockData();\r\n    const handleClick = () => {\r\n        initialize();\r\n    };\r\n\r\n    return (\r\n        <main className=\"initialize\">\r\n            <div className=\"container\">\r\n                <div className=\"initialize__body\">\r\n                    <h1 className=\"initialize__title\">\r\n                        Страница инициализации данных\r\n                    </h1>\r\n                    <h3 className=\"initialize__subtitle\">\r\n                        Инициализация данных\r\n                        {config.isFireBase ? \"в FireBase\" : \"на сервер\"}\r\n                    </h3>\r\n                    <ul>\r\n                        <li>Статус: {status}</li>\r\n                        <li>Прогресс: {progress}%</li>\r\n                        {error && (\r\n                            <li className=\"initialize__error\">\r\n                                Ошибка: {error}\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                    <button className=\"initialize__btn\" onClick={handleClick}>\r\n                        Инициализировать\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Initialize;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getIsLoggedIn } from \"../../store/users\";\r\nconst ProtectedRoute = ({ component: Component, children, ...rest }) => {\r\n    const isLoggedIn = useSelector(getIsLoggedIn());\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                if (!isLoggedIn) {\r\n                    return (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/authorization\",\r\n                                state: {\r\n                                    from: props.location.pathname\r\n                                }\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n                return Component ? <Component {...props} /> : children;\r\n            }}\r\n        />\r\n    );\r\n};\r\nProtectedRoute.propTypes = {\r\n    component: PropTypes.func,\r\n    location: PropTypes.object,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\n\r\nconst GlobalLoading = () => {\r\n    return (\r\n        <div className=\"global-loading\">\r\n            <div className=\"global-loading__circle\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GlobalLoading;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getDataLoaded, loadUsersList } from \"../../store/users\";\r\nimport GlobalLoading from \"../global_loading/global_loading\";\r\n\r\nconst UsersLoader = ({ children }) => {\r\n    const dispatch = useDispatch();\r\n    const dataLoaded = useSelector(getDataLoaded());\r\n    useEffect(() => {\r\n        if (!dataLoaded) dispatch(loadUsersList());\r\n    }, []);\r\n    if (!dataLoaded) return <GlobalLoading />;\r\n    return children;\r\n};\r\nUsersLoader.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\nexport default UsersLoader;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getCurrentUserData, updateCurrentUserData } from \"../../store/users\";\r\nimport Inputs from \"../auth_and_registration/inputs\";\r\nimport BackLink from \"../backLinkComponent/backLink\";\r\nimport userDefaultImage from \"./images/default-user.png\";\r\n\r\nconst ProfileEdit = () => {\r\n    const history = useHistory();\r\n    const currentUser = useSelector(getCurrentUserData());\r\n    const dispatch = useDispatch();\r\n\r\n    const [data, setData] = useState({\r\n        name: currentUser.name || \"\",\r\n        lastName: currentUser.lastName || \"\",\r\n        _id: currentUser._id\r\n    });\r\n    const [errors, setErrors] = useState();\r\n    const handleChange = ({ target }) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newData = { ...data, name: data.name, lastName: data.lastName };\r\n        try {\r\n            dispatch(updateCurrentUserData(newData));\r\n        } catch (error) {\r\n            setErrors(error);\r\n        }\r\n    };\r\n\r\n    const getSubmittClasses = () => {\r\n        return (\r\n            \"authorization__submit\" +\r\n            (data.name.length < 3 ? \" authorization__submit-not-active\" : \"\")\r\n        );\r\n    };\r\n\r\n    return (\r\n        <main className=\"shop\">\r\n            <div className=\"container\">\r\n                <BackLink name=\"На страницу пользователя\" />\r\n                <section className=\"profile\">\r\n                    <div className=\"profile__flex\">\r\n                        <article className=\"profile__flex-left\">\r\n                            <img\r\n                                src={currentUser.img || userDefaultImage}\r\n                                alt=\"user\"\r\n                            />\r\n                        </article>\r\n                        <article className=\"profile__flex-right\">\r\n                            <form\r\n                                action=\"put\"\r\n                                className=\"profile__form\"\r\n                                onSubmit={handleSubmit}\r\n                            >\r\n                                <div className=\"profile__item\">\r\n                                    <p className=\"profile__item-label\">\r\n                                        Ваше имя:\r\n                                    </p>\r\n                                    <Inputs\r\n                                        name=\"name\"\r\n                                        value={data.name}\r\n                                        onChange={handleChange}\r\n                                        error={errors}\r\n                                        messagePlaceholder=\"Введите ваше имя\"\r\n                                        classNameInput=\"profile__item-input authorization__email\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"profile__item\">\r\n                                    <p className=\"profile__item-label\">\r\n                                        Вашa фамилия:\r\n                                    </p>\r\n                                    <Inputs\r\n                                        name=\"lastName\"\r\n                                        value={data.lastName}\r\n                                        onChange={handleChange}\r\n                                        error={errors}\r\n                                        messagePlaceholder=\"Введите вашу фамилию\"\r\n                                        classNameInput=\"profile__item-input authorization__email\"\r\n                                    />\r\n                                </div>\r\n                                {currentUser && (\r\n                                    <div className=\"profile__item\">\r\n                                        <button\r\n                                            type=\"submit\"\r\n                                            className={getSubmittClasses()}\r\n                                            onClick={history.goBack}\r\n                                        >\r\n                                            Сохранить\r\n                                        </button>\r\n                                    </div>\r\n                                )}\r\n                            </form>\r\n                        </article>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default ProfileEdit;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BackLink from \"../backLinkComponent/backLink\";\r\nimport userDefaultImage from \"./images/default-user.png\";\r\nimport PropTypes from \"prop-types\";\r\nimport GlobalLoading from \"../global_loading/global_loading\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCurrentUserData, getParamsUser } from \"../../store/users\";\r\nimport { checkCommentsAmount } from \"../../store/comments\";\r\n\r\nconst ProfileUser = ({ profileId }) => {\r\n    const currentUser = useSelector(getCurrentUserData());\r\n    const paramsUser = useSelector(getParamsUser(profileId));\r\n    const [pageUser, setPageUser] = useState();\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(checkCommentsAmount());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPageUser(paramsUser);\r\n    }, [currentUser, paramsUser]);\r\n\r\n    return (\r\n        <>\r\n            {pageUser ? (\r\n                <main className=\"shop\">\r\n                    <div className=\"container\">\r\n                        <BackLink name=\"Вернуться к покупкам\" />\r\n                        <section className=\"profile\">\r\n                            <div className=\"profile__flex\">\r\n                                <article className=\"profile__flex-left\">\r\n                                    <img\r\n                                        src={\r\n                                            pageUser.img\r\n                                                ? pageUser.img\r\n                                                : userDefaultImage\r\n                                        }\r\n                                        alt=\"user\"\r\n                                    />\r\n                                </article>\r\n                                <article className=\"profile__flex-right\">\r\n                                    <div className=\"profile__item\">\r\n                                        <p className=\"profile__item-label\">\r\n                                            Имя пользователя:\r\n                                        </p>\r\n                                        <p className=\"profile__item-name\">\r\n                                            {pageUser.name}\r\n                                        </p>\r\n                                    </div>\r\n                                    {pageUser.lastName.length > 0 && (\r\n                                        <div className=\"profile__item\">\r\n                                            <p className=\"profile__item-label\">\r\n                                                Фамилия пользователя:\r\n                                            </p>\r\n                                            <p className=\"profile__item-name\">\r\n                                                {pageUser.lastName}\r\n                                            </p>\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    <div className=\"profile__item\">\r\n                                        <p className=\"profile__item-label\">\r\n                                            На сайте с:\r\n                                        </p>\r\n                                        <p className=\"profile__item-name\">\r\n                                            {pageUser.registerDate}\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"profile__item\">\r\n                                        <p className=\"profile__item-label\">\r\n                                            Оставил отзывов:\r\n                                        </p>\r\n                                        <p className=\"profile__item-name\">\r\n                                            {pageUser.amountReviews}\r\n                                        </p>\r\n                                    </div>\r\n                                    {paramsUser._id === currentUser._id && (\r\n                                        <div className=\"profile__item\">\r\n                                            <Link\r\n                                                to={`/profile/${currentUser._id}/edit`}\r\n                                                className=\"profile__item-edit\"\r\n                                            >\r\n                                                Редактировать\r\n                                            </Link>\r\n                                        </div>\r\n                                    )}\r\n                                </article>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </main>\r\n            ) : (\r\n                <GlobalLoading />\r\n            )}\r\n        </>\r\n    );\r\n};\r\nProfileUser.propTypes = {\r\n    profileId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ProfileUser;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { getCurrentUserId } from \"../../store/users\";\r\nimport UsersLoader from \"../hoc/usersLoader\";\r\nimport Products from \"../products/products\";\r\nimport ProfileEdit from \"./profileEdit\";\r\nimport ProfileUser from \"./profileUser\";\r\n\r\nconst Profile = () => {\r\n    const params = useParams();\r\n    const { profileId, edit } = params;\r\n    const currentUserId = useSelector(getCurrentUserId());\r\n    return (\r\n        <UsersLoader>\r\n            {profileId ? (\r\n                edit ? (\r\n                    profileId === currentUserId ? (\r\n                        <ProfileEdit />\r\n                    ) : (\r\n                        <Redirect to={`/profile/${currentUserId}/edit`} />\r\n                    )\r\n                ) : (\r\n                    <ProfileUser profileId={profileId} />\r\n                )\r\n            ) : (\r\n                <Products />\r\n            )}\r\n        </UsersLoader>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signOut } from \"../../store/users\";\r\nimport GlobalLoading from \"../global_loading/global_loading\";\r\n\r\nconst SignOut = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(signOut());\r\n    }, []);\r\n    return <GlobalLoading />;\r\n};\r\n\r\nexport default SignOut;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadProductsList } from \"../../store/products\";\r\nimport {\r\n    getIsLoggedIn,\r\n    getUsersIsLoading,\r\n    loadUsersList\r\n} from \"../../store/users\";\r\nimport GlobalLoading from \"../global_loading/global_loading\";\r\nimport { loadFavouritesList } from \"../../store/favourite\";\r\nimport { loadBasketList } from \"../../store/basket\";\r\n\r\nconst AppLoader = ({ children }) => {\r\n    const dispatch = useDispatch();\r\n    const userIsLoading = useSelector(getUsersIsLoading());\r\n    const isLoggedIn = useSelector(getIsLoggedIn());\r\n\r\n    useEffect(() => {\r\n        dispatch(loadFavouritesList());\r\n        dispatch(loadBasketList());\r\n        dispatch(loadProductsList());\r\n        dispatch(loadUsersList());\r\n    }, [isLoggedIn]);\r\n    if (userIsLoading) return <GlobalLoading />;\r\n    return children;\r\n};\r\nAppLoader.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\nexport default AppLoader;\r\n","import React from \"react\";\r\nimport Header from \"./components/header_and_footer/header\";\r\nimport Authorization from \"./components/auth_and_registration/authorization\";\r\nimport Registration from \"./components/auth_and_registration/registration\";\r\nimport Footer from \"./components/header_and_footer/footer\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Basket from \"./components/basketPage/basket\";\r\nimport Products from \"./components/products/products\";\r\nimport PageNotFound from \"./components/404/page-404\";\r\nimport FavoritesPage from \"./components/favoritesPage/favoritesPage\";\r\nimport Initialize from \"./components/initialize/initialize\";\r\nimport ProtectedRoute from \"./components/protectedRoutes/protectedRoute\";\r\nimport Profile from \"./components/header_and_footer/profile\";\r\nimport SignOut from \"./components/auth_and_registration/sign_out\";\r\nimport ProductsList from \"./components/products/productsPage/productsList\";\r\nimport AppLoader from \"./components/hoc/appLoader\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <AppLoader>\r\n                <Header />\r\n                <Switch>\r\n                    <ProtectedRoute path=\"/basket\" component={Basket} />\r\n                    <Route path=\"/favorites\" component={FavoritesPage} />\r\n                    <Route path=\"/products/:productId?\" component={Products} />\r\n                    <ProtectedRoute\r\n                        path=\"/profile/:profileId?/:edit?\"\r\n                        component={Profile}\r\n                    />\r\n                    <Route path=\"/404\" component={PageNotFound} />\r\n                    <Route path=\"/registration\" component={Registration} />\r\n                    <Route path=\"/signout\" component={SignOut} />\r\n                    <Route\r\n                        path=\"/authorization\"\r\n                        exact\r\n                        component={Authorization}\r\n                    />\r\n                    <Route path=\"/\" exact component={ProductsList} />\r\n                    <Route path=\"/initialize\" component={Initialize} />\r\n                    <Redirect to=\"/404\" />\r\n                </Switch>\r\n                <Footer />\r\n            </AppLoader>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import basketReducer from \"./basket\";\r\nimport commentsReducer from \"./comments\";\r\nimport favouritesReducer from \"./favourite\";\r\nimport productsReducer from \"./products\";\r\nimport usersReducer from \"./users\";\r\n\r\nconst {\r\n    combineReducers,\r\n    configureStore,\r\n    getDefaultMiddleware\r\n} = require(\"@reduxjs/toolkit\");\r\n\r\nconst customizedMiddleware = getDefaultMiddleware({\r\n    serializableCheck: false\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n    products: productsReducer,\r\n    users: usersReducer,\r\n    comments: commentsReducer,\r\n    favourites: favouritesReducer,\r\n    basket: basketReducer\r\n});\r\n\r\nexport function createStore() {\r\n    return configureStore({\r\n        reducer: rootReducer,\r\n        middleware: customizedMiddleware\r\n    });\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./scss/style.scss\";\r\nimport App from \"./app/App\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"./app/store/createStore\";\r\nimport history from \"./utils/history\";\r\n\r\nconst store = createStore();\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <Router history={history}>\r\n                <App />\r\n            </Router>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}